{"cells":[{"cell_type":"markdown","metadata":{"id":"tJBnSSDJmUn7"},"source":["# Spleen 3D segmentation with MONAI\n","\n","This tutorial shows how to integrate MONAI into an existing PyTorch medical DL program.\n","\n","And easily use below features:\n","1. Transforms for dictionary format data.\n","1. Load Nifti image with metadata.\n","1. Add channel dim to the data if no channel dimension.\n","1. Scale medical image intensity with expected range.\n","1. Crop out a batch of balanced images based on positive / negative label ratio.\n","1. Cache IO and transforms to accelerate training and validation.\n","1. 3D UNet model, Dice loss function, Mean Dice metric for 3D segmentation task.\n","1. Sliding window inference method.\n","1. Deterministic training for reproducibility.\n","\n","The Spleen dataset can be downloaded from http://medicaldecathlon.com/.\n","\n","![spleen](http://medicaldecathlon.com/img/spleen0.png)\n","\n","Target: Spleen  \n","Modality: CT  \n","Size: 61 3D volumes (41 Training + 20 Testing)  \n","Source: Memorial Sloan Kettering Cancer Center  \n","Challenge: Large ranging foreground size\n","\n","[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/Project-MONAI/tutorials/blob/main/3d_segmentation/spleen_segmentation_3d.ipynb)"]},{"cell_type":"markdown","metadata":{"id":"s0SCz3yUmUn-"},"source":["## Setup environment"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GXYufSgDmUn-","executionInfo":{"status":"ok","timestamp":1673896994224,"user_tz":0,"elapsed":6164,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"ec104f22-848b-4ec5-93f1-522687dda8c4","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Traceback (most recent call last):\n","  File \"<string>\", line 1, in <module>\n","ModuleNotFoundError: No module named 'monai'\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m17.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m264.1/264.1 KB\u001b[0m \u001b[31m30.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!python -c \"import monai\" || pip install -q \"monai-weekly[gdown, nibabel, tqdm, ignite]\"\n","!python -c \"import matplotlib\" || pip install -q matplotlib\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"Sx7RWZ4lmUn_"},"outputs":[],"source":["from monai.utils import first, set_determinism\n","from monai.transforms import (\n","    AsDiscrete,\n","    AsDiscreted,\n","    EnsureChannelFirstd,\n","    Compose,\n","    CropForegroundd,\n","    LoadImaged,\n","    Orientationd,\n","    RandCropByPosNegLabeld,\n","    SaveImaged,\n","    ScaleIntensityRanged,\n","    Spacingd,\n","    Invertd,\n","    RandAffined,\n","    DivisiblePadd,\n",")\n","from monai.handlers.utils import from_engine\n","from monai.networks.nets import UNet\n","from monai.networks.layers import Norm\n","from monai.metrics import DiceMetric\n","from monai.losses import DiceLoss\n","from monai.inferers import sliding_window_inference\n","from monai.data import CacheDataset, DataLoader, Dataset, decollate_batch\n","from monai.config import print_config\n","from monai.apps import download_and_extract\n","import torch\n","import matplotlib.pyplot as plt\n","import tempfile\n","import shutil\n","import os\n","import glob"]},{"cell_type":"code","source":["torch.cuda.get_device_name(0)"],"metadata":{"id":"_wKFPmfpm15d","executionInfo":{"status":"ok","timestamp":1673897004137,"user_tz":0,"elapsed":3,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"f5cb4842-69db-4737-d491-a77dc5e6687d","colab":{"base_uri":"https://localhost:8080/","height":35}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'A100-SXM4-40GB'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"mdvhup2umUn_"},"source":["## Setup imports"]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"z54EibPXmUoA","executionInfo":{"status":"ok","timestamp":1673897007781,"user_tz":0,"elapsed":184,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"409d77ec-2e31-4ee3-cdcc-c27e424321f1","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["MONAI version: 1.2.dev2302\n","Numpy version: 1.21.6\n","Pytorch version: 1.13.0+cu116\n","MONAI flags: HAS_EXT = False, USE_COMPILED = False, USE_META_DICT = False\n","MONAI rev id: 708e1a1cf4a1d5516eaf65b8a0bee8887cdee494\n","MONAI __file__: /usr/local/lib/python3.8/dist-packages/monai/__init__.py\n","\n","Optional dependencies:\n","Pytorch Ignite version: 0.4.10\n","Nibabel version: 3.0.2\n","scikit-image version: 0.18.3\n","Pillow version: 7.1.2\n","Tensorboard version: 2.9.1\n","gdown version: 4.4.0\n","TorchVision version: 0.14.0+cu116\n","tqdm version: 4.64.1\n","lmdb version: 0.99\n","psutil version: 5.4.8\n","pandas version: 1.3.5\n","einops version: NOT INSTALLED or UNKNOWN VERSION.\n","transformers version: NOT INSTALLED or UNKNOWN VERSION.\n","mlflow version: NOT INSTALLED or UNKNOWN VERSION.\n","pynrrd version: NOT INSTALLED or UNKNOWN VERSION.\n","\n","For details about installing the optional dependencies, please visit:\n","    https://docs.monai.io/en/latest/installation.html#installing-the-recommended-dependencies\n","\n"]}],"source":["# Copyright 2020 MONAI Consortium\n","# Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#     http://www.apache.org/licenses/LICENSE-2.0\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License.\n","\n","\n","print_config()"]},{"cell_type":"markdown","metadata":{"id":"RkdV3SIcmUoA"},"source":["## Setup data directory\n","\n","You can specify a directory with the `MONAI_DATA_DIRECTORY` environment variable.  \n","This allows you to save results and reuse downloads.  \n","If not specified a temporary directory will be used."]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"5KgHplgUmUoB","executionInfo":{"status":"ok","timestamp":1673897014477,"user_tz":0,"elapsed":226,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"7e0d0fc2-8b54-4cd3-e82c-0fdb6c8b2285","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["/tmp/tmpbd6fwkg5\n"]}],"source":["directory = os.environ.get(\"MONAI_DATA_DIRECTORY\")\n","root_dir = tempfile.mkdtemp() if directory is None else directory\n","print(root_dir)"]},{"cell_type":"markdown","metadata":{"id":"YgVG3yi2mUoB"},"source":["## Download dataset\n","\n","Downloads and extracts the dataset.  \n","The dataset comes from http://medicaldecathlon.com/."]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"7VeA6WZdmUoC","executionInfo":{"status":"ok","timestamp":1673897069171,"user_tz":0,"elapsed":41351,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"2d12f0fc-b4cd-40ae-c6bc-839d58b78fb6","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stderr","text":["Task09_Spleen.tar: 1.50GB [00:35, 45.4MB/s]                            "]},{"output_type":"stream","name":"stdout","text":["2023-01-16 19:24:21,746 - INFO - Downloaded: /tmp/tmpbd6fwkg5/Task09_Spleen.tar\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"stream","name":"stdout","text":["2023-01-16 19:24:24,941 - INFO - Verified 'Task09_Spleen.tar', md5: 410d4a301da4e5b2f6f86ec3ddba524e.\n","2023-01-16 19:24:24,942 - INFO - Writing into directory: /tmp/tmpbd6fwkg5.\n"]}],"source":["resource = \"https://msd-for-monai.s3-us-west-2.amazonaws.com/Task09_Spleen.tar\"\n","md5 = \"410d4a301da4e5b2f6f86ec3ddba524e\"\n","\n","compressed_file = os.path.join(root_dir, \"Task09_Spleen.tar\")\n","data_dir = os.path.join(root_dir, \"Task09_Spleen\")\n","if not os.path.exists(data_dir):\n","    download_and_extract(resource, compressed_file, root_dir, md5)"]},{"cell_type":"markdown","metadata":{"id":"C24XDiShmUoC"},"source":["## Set MSD Spleen dataset path"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sj7FYUmtF3eU","executionInfo":{"status":"ok","timestamp":1673897953087,"user_tz":0,"elapsed":17733,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"7754f4a5-b98b-46a4-fa53-b2f9bce76043"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["file_path1='/content/drive/My Drive/Dataset/DATA/ADC'\n","file_path2='/content/drive/My Drive/Dataset/DATA/Label/thigh'"],"metadata":{"id":"j_aeue87GArO"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"emgTs23RmUoC"},"outputs":[],"source":["train_images = sorted(\n","    glob.glob(os.path.join(file_path1, \"*.nii.gz\")))\n","train_labels = sorted(\n","    glob.glob(os.path.join(file_path2, \"*.nii.gz\")))\n","data_dicts = [\n","    {\"image\": image_name, \"label\": label_name}\n","    for image_name, label_name in zip(train_images, train_labels)\n","]\n","train_files, val_files = data_dicts[:-6], data_dicts[-6:]"]},{"cell_type":"code","source":["print(val_files)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hz2CA8jtG3yk","executionInfo":{"status":"ok","timestamp":1673898227936,"user_tz":0,"elapsed":212,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"e1be2046-aa60-478a-bd7f-2a75bd7ad50c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[{'image': '/content/drive/My Drive/Dataset/DATA/ADC/MM77PS.nii.gz', 'label': '/content/drive/My Drive/Dataset/DATA/Label/thigh/MM77PS.nii.gz'}, {'image': '/content/drive/My Drive/Dataset/DATA/ADC/MM78BP.nii.gz', 'label': '/content/drive/My Drive/Dataset/DATA/Label/thigh/MM78BP.nii.gz'}, {'image': '/content/drive/My Drive/Dataset/DATA/ADC/MM81LS.nii.gz', 'label': '/content/drive/My Drive/Dataset/DATA/Label/thigh/MM81LS.nii.gz'}, {'image': '/content/drive/My Drive/Dataset/DATA/ADC/MM85GN.nii.gz', 'label': '/content/drive/My Drive/Dataset/DATA/Label/thigh/MM85GN.nii.gz'}, {'image': '/content/drive/My Drive/Dataset/DATA/ADC/MM90AE.nii.gz', 'label': '/content/drive/My Drive/Dataset/DATA/Label/thigh/MM90AE.nii.gz'}, {'image': '/content/drive/My Drive/Dataset/DATA/ADC/MM93AC.nii.gz', 'label': '/content/drive/My Drive/Dataset/DATA/Label/thigh/MM93AC.nii.gz'}]\n"]}]},{"cell_type":"markdown","metadata":{"id":"FsZlGGHsmUoC"},"source":["## Set deterministic training for reproducibility"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2-JN7JjrmUoC"},"outputs":[],"source":["set_determinism(seed=0)"]},{"cell_type":"markdown","metadata":{"id":"uyMkvBBymUoD"},"source":["## Setup transforms for training and validation\n","\n","Here we use several transforms to augment the dataset:\n","1. `LoadImaged` loads the spleen CT images and labels from NIfTI format files.\n","1. `EnsureChannelFirstd` ensures the original data to construct \"channel first\" shape.\n","1. `Orientationd` unifies the data orientation based on the affine matrix.\n","1. `Spacingd` adjusts the spacing by `pixdim=(1.5, 1.5, 2.)` based on the affine matrix.\n","1. `ScaleIntensityRanged` extracts intensity range [-57, 164] and scales to [0, 1].\n","1. `CropForegroundd` removes all zero borders to focus on the valid body area of the images and labels.\n","1. `RandCropByPosNegLabeld` randomly crop patch samples from big image based on pos / neg ratio.  \n","The image centers of negative samples must be in valid body area.\n","1. `RandAffined` efficiently performs `rotate`, `scale`, `shear`, `translate`, etc. together based on PyTorch affine transform."]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"vH-H5BT5Oxh8"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qOdsAkRdmUoD"},"outputs":[],"source":["train_transforms = Compose(\n","    [\n","        LoadImaged(keys=[\"image\", \"label\"]),\n","        EnsureChannelFirstd(keys=[\"image\", \"label\"]),\n","        ScaleIntensityRanged(\n","            keys=[\"image\"], a_min=0, a_max=4095,\n","            b_min=0.0, b_max=1.0,\n","        ),\n","        Orientationd(keys=[\"image\", \"label\"], axcodes=\"RAS\"),\n","        Spacingd(keys=[\"image\", \"label\"], pixdim=(\n","            2, 2, 2), mode=(\"bilinear\", \"nearest\")),\n","        CropForegroundd(keys=[\"image\", \"label\"], source_key=\"label\"),\n","        DivisiblePadd([\"image\", \"label\"], 16),\n","        # user can also add other random transforms\n","\n","    ]\n",")\n","val_transforms = Compose(\n","    [\n","        LoadImaged(keys=[\"image\", \"label\"]),\n","        EnsureChannelFirstd(keys=[\"image\", \"label\"]),\n","        ScaleIntensityRanged(\n","            keys=[\"image\"], a_min=0, a_max=4095,\n","            b_min=0.0, b_max=1.0,\n","        ),\n","        Orientationd(keys=[\"image\", \"label\"], axcodes=\"RAS\"),\n","        Spacingd(keys=[\"image\", \"label\"], pixdim=(\n","            2, 2, 2), mode=(\"bilinear\", \"nearest\")),\n","        CropForegroundd(keys=[\"image\", \"label\"], source_key=\"label\"),\n","        DivisiblePadd([\"image\", \"label\"], 16),\n","    ]\n",")"]},{"cell_type":"markdown","metadata":{"id":"1okAMKYRmUoD"},"source":["## Check transforms in DataLoader"]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"LSMzFIJ1mUoD","executionInfo":{"status":"ok","timestamp":1673902664106,"user_tz":0,"elapsed":2879,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"f97cbb9c-0633-41f0-a041-e8687d66ce86","colab":{"base_uri":"https://localhost:8080/","height":408}},"outputs":[{"output_type":"stream","name":"stdout","text":["image shape: torch.Size([144, 48, 128]), label shape: torch.Size([144, 48, 128])\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x432 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["check_ds = Dataset(data=val_files, transform=val_transforms)\n","check_loader = DataLoader(check_ds, batch_size=1)\n","check_data = first(check_loader)\n","image, label = (check_data[\"image\"][0][0], check_data[\"label\"][0][0])\n","print(f\"image shape: {image.shape}, label shape: {label.shape}\")\n","# plot the slice [:, :, 80]\n","plt.figure(\"check\", (12, 6))\n","plt.subplot(1, 2, 1)\n","plt.title(\"image\")\n","plt.imshow(image[:, :, 10], cmap=\"gray\")\n","plt.subplot(1, 2, 2)\n","plt.title(\"label\")\n","plt.imshow(label[:, :, 10])\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"P6cFN9pFmUoD"},"source":["## Define CacheDataset and DataLoader for training and validation\n","\n","Here we use CacheDataset to accelerate training and validation process, it's 10x faster than the regular Dataset.  \n","To achieve best performance, set `cache_rate=1.0` to cache all the data, if memory is not enough, set lower value.  \n","Users can also set `cache_num` instead of `cache_rate`, will use the minimum value of the 2 settings.  \n","And set `num_workers` to enable multi-threads during caching.  \n","If want to to try the regular Dataset, just change to use the commented code below."]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"UTjgtz1hmUoE","executionInfo":{"status":"ok","timestamp":1673902707862,"user_tz":0,"elapsed":27202,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"8f5d427e-ebdc-4fd1-8587-3e6f1a446d0e","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stderr","text":["Loading dataset: 100%|██████████| 24/24 [00:20<00:00,  1.15it/s]\n","Loading dataset: 100%|██████████| 6/6 [00:06<00:00,  1.00s/it]\n"]}],"source":["train_ds = CacheDataset(\n","    data=train_files, transform=train_transforms,\n","    cache_rate=1.0, num_workers=4)\n","#train_ds = Dataset(data=train_files, transform=train_transforms)\n","\n","# use batch_size=2 to load images and use RandCropByPosNegLabeld\n","# to generate 2 x 4 images for network training\n","train_loader = DataLoader(train_ds, batch_size=1, shuffle=True, num_workers=4)\n","\n","val_ds = CacheDataset(\n","    data=val_files, transform=val_transforms, cache_rate=1.0, num_workers=4)\n","#val_ds = Dataset(data=val_files, transform=val_transforms)\n","val_loader = DataLoader(val_ds, batch_size=1, num_workers=4)"]},{"cell_type":"markdown","metadata":{"id":"cNevkVhKmUoE"},"source":["## Create Model, Loss, Optimizer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IKBgs6OEmUoE"},"outputs":[],"source":["# standard PyTorch program style: create UNet, DiceLoss and Adam optimizer\n","device = torch.device(\"cuda:0\")\n","model = UNet(\n","    spatial_dims=3,\n","    in_channels=1,\n","    out_channels=2,\n","    channels=(16, 32, 64, 128, 256),\n","    strides=(2, 2, 2, 2),\n","    num_res_units=2,\n","    norm=Norm.BATCH,\n",").to(device)\n","loss_function = DiceLoss(to_onehot_y=True, softmax=True)\n","optimizer = torch.optim.Adam(model.parameters(), 1e-4)\n","dice_metric = DiceMetric(include_background=False, reduction=\"mean\")"]},{"cell_type":"markdown","metadata":{"id":"87zf-LA0mUoE"},"source":["## Execute a typical PyTorch training process"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"tags":[],"id":"7BvW84f9mUoE","executionInfo":{"status":"ok","timestamp":1673903542606,"user_tz":0,"elapsed":827394,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"95ad8df1-b479-4dc7-cefd-42abe797ead3","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["----------\n","epoch 1/100\n","1/24, train_loss: 0.6887\n","2/24, train_loss: 0.6422\n","3/24, train_loss: 0.6686\n","4/24, train_loss: 0.6684\n","5/24, train_loss: 0.6461\n","6/24, train_loss: 0.6328\n","7/24, train_loss: 0.6587\n","8/24, train_loss: 0.6325\n","9/24, train_loss: 0.6132\n","10/24, train_loss: 0.6643\n","11/24, train_loss: 0.6404\n","12/24, train_loss: 0.6438\n","13/24, train_loss: 0.6399\n","14/24, train_loss: 0.6552\n","15/24, train_loss: 0.6074\n","16/24, train_loss: 0.6333\n","17/24, train_loss: 0.6511\n","18/24, train_loss: 0.5961\n","19/24, train_loss: 0.6097\n","20/24, train_loss: 0.6387\n","21/24, train_loss: 0.6315\n","22/24, train_loss: 0.6542\n","23/24, train_loss: 0.5910\n","24/24, train_loss: 0.6186\n","epoch 1 average loss: 0.6386\n","----------\n","epoch 2/100\n","1/24, train_loss: 0.5876\n","2/24, train_loss: 0.6321\n","3/24, train_loss: 0.5875\n","4/24, train_loss: 0.6255\n","5/24, train_loss: 0.5797\n","6/24, train_loss: 0.6221\n","7/24, train_loss: 0.6160\n","8/24, train_loss: 0.6154\n","9/24, train_loss: 0.5885\n","10/24, train_loss: 0.5975\n","11/24, train_loss: 0.6379\n","12/24, train_loss: 0.6444\n","13/24, train_loss: 0.6048\n","14/24, train_loss: 0.6505\n","15/24, train_loss: 0.6048\n","16/24, train_loss: 0.6318\n","17/24, train_loss: 0.6300\n","18/24, train_loss: 0.6236\n","19/24, train_loss: 0.6173\n","20/24, train_loss: 0.5828\n","21/24, train_loss: 0.5665\n","22/24, train_loss: 0.5717\n","23/24, train_loss: 0.6061\n","24/24, train_loss: 0.6227\n","epoch 2 average loss: 0.6103\n","saved new best metric model\n","current epoch: 2 current mean dice: 0.1003\n","best mean dice: 0.1003 at epoch: 2\n","----------\n","epoch 3/100\n","1/24, train_loss: 0.5595\n","2/24, train_loss: 0.6011\n","3/24, train_loss: 0.6209\n","4/24, train_loss: 0.6155\n","5/24, train_loss: 0.5687\n","6/24, train_loss: 0.5925\n","7/24, train_loss: 0.5857\n","8/24, train_loss: 0.5894\n","9/24, train_loss: 0.5524\n","10/24, train_loss: 0.5651\n","11/24, train_loss: 0.5854\n","12/24, train_loss: 0.6001\n","13/24, train_loss: 0.5752\n","14/24, train_loss: 0.5270\n","15/24, train_loss: 0.5246\n","16/24, train_loss: 0.6397\n","17/24, train_loss: 0.5200\n","18/24, train_loss: 0.5975\n","19/24, train_loss: 0.6115\n","20/24, train_loss: 0.5885\n","21/24, train_loss: 0.5367\n","22/24, train_loss: 0.6172\n","23/24, train_loss: 0.6062\n","24/24, train_loss: 0.6256\n","epoch 3 average loss: 0.5836\n","----------\n","epoch 4/100\n","1/24, train_loss: 0.6076\n","2/24, train_loss: 0.5751\n","3/24, train_loss: 0.5737\n","4/24, train_loss: 0.5412\n","5/24, train_loss: 0.5309\n","6/24, train_loss: 0.5280\n","7/24, train_loss: 0.5965\n","8/24, train_loss: 0.6005\n","9/24, train_loss: 0.5022\n","10/24, train_loss: 0.4974\n","11/24, train_loss: 0.6311\n","12/24, train_loss: 0.5585\n","13/24, train_loss: 0.4956\n","14/24, train_loss: 0.6178\n","15/24, train_loss: 0.5315\n","16/24, train_loss: 0.5956\n","17/24, train_loss: 0.5578\n","18/24, train_loss: 0.5577\n","19/24, train_loss: 0.5686\n","20/24, train_loss: 0.5607\n","21/24, train_loss: 0.6017\n","22/24, train_loss: 0.5773\n","23/24, train_loss: 0.5123\n","24/24, train_loss: 0.5776\n","epoch 4 average loss: 0.5624\n","saved new best metric model\n","current epoch: 4 current mean dice: 0.1291\n","best mean dice: 0.1291 at epoch: 4\n","----------\n","epoch 5/100\n","1/24, train_loss: 0.5572\n","2/24, train_loss: 0.6142\n","3/24, train_loss: 0.5558\n","4/24, train_loss: 0.5896\n","5/24, train_loss: 0.5451\n","6/24, train_loss: 0.5892\n","7/24, train_loss: 0.5051\n","8/24, train_loss: 0.5600\n","9/24, train_loss: 0.5698\n","10/24, train_loss: 0.4774\n","11/24, train_loss: 0.5201\n","12/24, train_loss: 0.6245\n","13/24, train_loss: 0.5432\n","14/24, train_loss: 0.5796\n","15/24, train_loss: 0.4733\n","16/24, train_loss: 0.5077\n","17/24, train_loss: 0.5922\n","18/24, train_loss: 0.5135\n","19/24, train_loss: 0.5437\n","20/24, train_loss: 0.4995\n","21/24, train_loss: 0.4661\n","22/24, train_loss: 0.5658\n","23/24, train_loss: 0.5763\n","24/24, train_loss: 0.4933\n","epoch 5 average loss: 0.5443\n","----------\n","epoch 6/100\n","1/24, train_loss: 0.5756\n","2/24, train_loss: 0.5420\n","3/24, train_loss: 0.5060\n","4/24, train_loss: 0.4600\n","5/24, train_loss: 0.4899\n","6/24, train_loss: 0.4658\n","7/24, train_loss: 0.5604\n","8/24, train_loss: 0.4603\n","9/24, train_loss: 0.5473\n","10/24, train_loss: 0.5755\n","11/24, train_loss: 0.4869\n","12/24, train_loss: 0.5378\n","13/24, train_loss: 0.5314\n","14/24, train_loss: 0.5561\n","15/24, train_loss: 0.5969\n","16/24, train_loss: 0.5714\n","17/24, train_loss: 0.4863\n","18/24, train_loss: 0.4792\n","19/24, train_loss: 0.5644\n","20/24, train_loss: 0.6080\n","21/24, train_loss: 0.5232\n","22/24, train_loss: 0.5140\n","23/24, train_loss: 0.4927\n","24/24, train_loss: 0.5770\n","epoch 6 average loss: 0.5295\n","saved new best metric model\n","current epoch: 6 current mean dice: 0.1651\n","best mean dice: 0.1651 at epoch: 6\n","----------\n","epoch 7/100\n","1/24, train_loss: 0.5361\n","2/24, train_loss: 0.5244\n","3/24, train_loss: 0.5602\n","4/24, train_loss: 0.4758\n","5/24, train_loss: 0.5186\n","6/24, train_loss: 0.4898\n","7/24, train_loss: 0.4355\n","8/24, train_loss: 0.4834\n","9/24, train_loss: 0.5898\n","10/24, train_loss: 0.4419\n","11/24, train_loss: 0.5464\n","12/24, train_loss: 0.4597\n","13/24, train_loss: 0.5712\n","14/24, train_loss: 0.6029\n","15/24, train_loss: 0.4754\n","16/24, train_loss: 0.5647\n","17/24, train_loss: 0.4403\n","18/24, train_loss: 0.5608\n","19/24, train_loss: 0.5142\n","20/24, train_loss: 0.5144\n","21/24, train_loss: 0.4633\n","22/24, train_loss: 0.5543\n","23/24, train_loss: 0.5413\n","24/24, train_loss: 0.4986\n","epoch 7 average loss: 0.5151\n","----------\n","epoch 8/100\n","1/24, train_loss: 0.5120\n","2/24, train_loss: 0.5108\n","3/24, train_loss: 0.4702\n","4/24, train_loss: 0.4513\n","5/24, train_loss: 0.5064\n","6/24, train_loss: 0.5378\n","7/24, train_loss: 0.5808\n","8/24, train_loss: 0.5368\n","9/24, train_loss: 0.5491\n","10/24, train_loss: 0.4562\n","11/24, train_loss: 0.5624\n","12/24, train_loss: 0.4905\n","13/24, train_loss: 0.4551\n","14/24, train_loss: 0.4655\n","15/24, train_loss: 0.5507\n","16/24, train_loss: 0.5512\n","17/24, train_loss: 0.4234\n","18/24, train_loss: 0.5452\n","19/24, train_loss: 0.5156\n","20/24, train_loss: 0.4988\n","21/24, train_loss: 0.5896\n","22/24, train_loss: 0.4131\n","23/24, train_loss: 0.4245\n","24/24, train_loss: 0.4612\n","epoch 8 average loss: 0.5024\n","saved new best metric model\n","current epoch: 8 current mean dice: 0.2300\n","best mean dice: 0.2300 at epoch: 8\n","----------\n","epoch 9/100\n","1/24, train_loss: 0.5561\n","2/24, train_loss: 0.5120\n","3/24, train_loss: 0.4960\n","4/24, train_loss: 0.4182\n","5/24, train_loss: 0.4353\n","6/24, train_loss: 0.5281\n","7/24, train_loss: 0.4934\n","8/24, train_loss: 0.4557\n","9/24, train_loss: 0.5442\n","10/24, train_loss: 0.4549\n","11/24, train_loss: 0.4949\n","12/24, train_loss: 0.4033\n","13/24, train_loss: 0.4413\n","14/24, train_loss: 0.5244\n","15/24, train_loss: 0.5375\n","16/24, train_loss: 0.5835\n","17/24, train_loss: 0.4081\n","18/24, train_loss: 0.5696\n","19/24, train_loss: 0.4448\n","20/24, train_loss: 0.4942\n","21/24, train_loss: 0.5339\n","22/24, train_loss: 0.5404\n","23/24, train_loss: 0.4758\n","24/24, train_loss: 0.4363\n","epoch 9 average loss: 0.4909\n","----------\n","epoch 10/100\n","1/24, train_loss: 0.5312\n","2/24, train_loss: 0.5186\n","3/24, train_loss: 0.4865\n","4/24, train_loss: 0.5362\n","5/24, train_loss: 0.4698\n","6/24, train_loss: 0.4065\n","7/24, train_loss: 0.3931\n","8/24, train_loss: 0.5359\n","9/24, train_loss: 0.5154\n","10/24, train_loss: 0.4425\n","11/24, train_loss: 0.4972\n","12/24, train_loss: 0.4253\n","13/24, train_loss: 0.4357\n","14/24, train_loss: 0.4312\n","15/24, train_loss: 0.4395\n","16/24, train_loss: 0.4795\n","17/24, train_loss: 0.5621\n","18/24, train_loss: 0.5755\n","19/24, train_loss: 0.5275\n","20/24, train_loss: 0.4790\n","21/24, train_loss: 0.4828\n","22/24, train_loss: 0.3946\n","23/24, train_loss: 0.5398\n","24/24, train_loss: 0.4230\n","epoch 10 average loss: 0.4804\n","saved new best metric model\n","current epoch: 10 current mean dice: 0.3061\n","best mean dice: 0.3061 at epoch: 10\n","----------\n","epoch 11/100\n","1/24, train_loss: 0.4821\n","2/24, train_loss: 0.5217\n","3/24, train_loss: 0.4202\n","4/24, train_loss: 0.5097\n","5/24, train_loss: 0.4707\n","6/24, train_loss: 0.4257\n","7/24, train_loss: 0.4326\n","8/24, train_loss: 0.5080\n","9/24, train_loss: 0.5571\n","10/24, train_loss: 0.5207\n","11/24, train_loss: 0.4189\n","12/24, train_loss: 0.4869\n","13/24, train_loss: 0.4569\n","14/24, train_loss: 0.4148\n","15/24, train_loss: 0.4703\n","16/24, train_loss: 0.4264\n","17/24, train_loss: 0.5685\n","18/24, train_loss: 0.3799\n","19/24, train_loss: 0.3826\n","20/24, train_loss: 0.5253\n","21/24, train_loss: 0.5330\n","22/24, train_loss: 0.3881\n","23/24, train_loss: 0.4736\n","24/24, train_loss: 0.5228\n","epoch 11 average loss: 0.4707\n","----------\n","epoch 12/100\n","1/24, train_loss: 0.5223\n","2/24, train_loss: 0.4171\n","3/24, train_loss: 0.3805\n","4/24, train_loss: 0.5159\n","5/24, train_loss: 0.5217\n","6/24, train_loss: 0.3723\n","7/24, train_loss: 0.4707\n","8/24, train_loss: 0.4688\n","9/24, train_loss: 0.4991\n","10/24, train_loss: 0.4788\n","11/24, train_loss: 0.3758\n","12/24, train_loss: 0.5639\n","13/24, train_loss: 0.4230\n","14/24, train_loss: 0.4619\n","15/24, train_loss: 0.4472\n","16/24, train_loss: 0.4118\n","17/24, train_loss: 0.5475\n","18/24, train_loss: 0.4605\n","19/24, train_loss: 0.5093\n","20/24, train_loss: 0.4955\n","21/24, train_loss: 0.4082\n","22/24, train_loss: 0.4119\n","23/24, train_loss: 0.4240\n","24/24, train_loss: 0.5250\n","epoch 12 average loss: 0.4630\n","saved new best metric model\n","current epoch: 12 current mean dice: 0.3132\n","best mean dice: 0.3132 at epoch: 12\n","----------\n","epoch 13/100\n","1/24, train_loss: 0.4607\n","2/24, train_loss: 0.3699\n","3/24, train_loss: 0.5244\n","4/24, train_loss: 0.3991\n","5/24, train_loss: 0.5152\n","6/24, train_loss: 0.4055\n","7/24, train_loss: 0.4555\n","8/24, train_loss: 0.4012\n","9/24, train_loss: 0.3547\n","10/24, train_loss: 0.4906\n","11/24, train_loss: 0.4392\n","12/24, train_loss: 0.3967\n","13/24, train_loss: 0.3638\n","14/24, train_loss: 0.4536\n","15/24, train_loss: 0.5037\n","16/24, train_loss: 0.4890\n","17/24, train_loss: 0.4682\n","18/24, train_loss: 0.4107\n","19/24, train_loss: 0.5403\n","20/24, train_loss: 0.5567\n","21/24, train_loss: 0.5058\n","22/24, train_loss: 0.4458\n","23/24, train_loss: 0.4993\n","24/24, train_loss: 0.4117\n","epoch 13 average loss: 0.4526\n","----------\n","epoch 14/100\n","1/24, train_loss: 0.3986\n","2/24, train_loss: 0.3889\n","3/24, train_loss: 0.3947\n","4/24, train_loss: 0.3995\n","5/24, train_loss: 0.3563\n","6/24, train_loss: 0.5030\n","7/24, train_loss: 0.4472\n","8/24, train_loss: 0.5391\n","9/24, train_loss: 0.3404\n","10/24, train_loss: 0.4258\n","11/24, train_loss: 0.4396\n","12/24, train_loss: 0.4801\n","13/24, train_loss: 0.4934\n","14/24, train_loss: 0.3811\n","15/24, train_loss: 0.3722\n","16/24, train_loss: 0.4571\n","17/24, train_loss: 0.3481\n","18/24, train_loss: 0.4449\n","19/24, train_loss: 0.5101\n","20/24, train_loss: 0.4936\n","21/24, train_loss: 0.5484\n","22/24, train_loss: 0.4369\n","23/24, train_loss: 0.4997\n","24/24, train_loss: 0.4776\n","epoch 14 average loss: 0.4407\n","current epoch: 14 current mean dice: 0.2780\n","best mean dice: 0.3132 at epoch: 12\n","----------\n","epoch 15/100\n","1/24, train_loss: 0.5471\n","2/24, train_loss: 0.3745\n","3/24, train_loss: 0.4750\n","4/24, train_loss: 0.3390\n","5/24, train_loss: 0.4945\n","6/24, train_loss: 0.3421\n","7/24, train_loss: 0.4890\n","8/24, train_loss: 0.5293\n","9/24, train_loss: 0.5055\n","10/24, train_loss: 0.3851\n","11/24, train_loss: 0.4950\n","12/24, train_loss: 0.4712\n","13/24, train_loss: 0.3840\n","14/24, train_loss: 0.4271\n","15/24, train_loss: 0.4370\n","16/24, train_loss: 0.4462\n","17/24, train_loss: 0.4842\n","18/24, train_loss: 0.3757\n","19/24, train_loss: 0.4107\n","20/24, train_loss: 0.3371\n","21/24, train_loss: 0.3675\n","22/24, train_loss: 0.4258\n","23/24, train_loss: 0.3528\n","24/24, train_loss: 0.4293\n","epoch 15 average loss: 0.4302\n","----------\n","epoch 16/100\n","1/24, train_loss: 0.3494\n","2/24, train_loss: 0.4216\n","3/24, train_loss: 0.4408\n","4/24, train_loss: 0.5427\n","5/24, train_loss: 0.4061\n","6/24, train_loss: 0.4993\n","7/24, train_loss: 0.3637\n","8/24, train_loss: 0.3687\n","9/24, train_loss: 0.4801\n","10/24, train_loss: 0.3588\n","11/24, train_loss: 0.3287\n","12/24, train_loss: 0.4616\n","13/24, train_loss: 0.4277\n","14/24, train_loss: 0.4618\n","15/24, train_loss: 0.4754\n","16/24, train_loss: 0.4206\n","17/24, train_loss: 0.3260\n","18/24, train_loss: 0.4222\n","19/24, train_loss: 0.4818\n","20/24, train_loss: 0.3681\n","21/24, train_loss: 0.5188\n","22/24, train_loss: 0.3197\n","23/24, train_loss: 0.4830\n","24/24, train_loss: 0.3671\n","epoch 16 average loss: 0.4206\n","current epoch: 16 current mean dice: 0.3018\n","best mean dice: 0.3132 at epoch: 12\n","----------\n","epoch 17/100\n","1/24, train_loss: 0.3081\n","2/24, train_loss: 0.4747\n","3/24, train_loss: 0.3507\n","4/24, train_loss: 0.4568\n","5/24, train_loss: 0.3575\n","6/24, train_loss: 0.4692\n","7/24, train_loss: 0.4118\n","8/24, train_loss: 0.3497\n","9/24, train_loss: 0.4135\n","10/24, train_loss: 0.4893\n","11/24, train_loss: 0.4787\n","12/24, train_loss: 0.4755\n","13/24, train_loss: 0.3151\n","14/24, train_loss: 0.5316\n","15/24, train_loss: 0.4046\n","16/24, train_loss: 0.3607\n","17/24, train_loss: 0.4152\n","18/24, train_loss: 0.3108\n","19/24, train_loss: 0.4494\n","20/24, train_loss: 0.3295\n","21/24, train_loss: 0.3554\n","22/24, train_loss: 0.3870\n","23/24, train_loss: 0.5113\n","24/24, train_loss: 0.4205\n","epoch 17 average loss: 0.4095\n","----------\n","epoch 18/100\n","1/24, train_loss: 0.4667\n","2/24, train_loss: 0.3136\n","3/24, train_loss: 0.3560\n","4/24, train_loss: 0.4730\n","5/24, train_loss: 0.5283\n","6/24, train_loss: 0.4099\n","7/24, train_loss: 0.3235\n","8/24, train_loss: 0.3401\n","9/24, train_loss: 0.3492\n","10/24, train_loss: 0.3452\n","11/24, train_loss: 0.4599\n","12/24, train_loss: 0.4449\n","13/24, train_loss: 0.3954\n","14/24, train_loss: 0.3024\n","15/24, train_loss: 0.2896\n","16/24, train_loss: 0.3791\n","17/24, train_loss: 0.5068\n","18/24, train_loss: 0.4663\n","19/24, train_loss: 0.3983\n","20/24, train_loss: 0.4119\n","21/24, train_loss: 0.4777\n","22/24, train_loss: 0.3941\n","23/24, train_loss: 0.4390\n","24/24, train_loss: 0.3319\n","epoch 18 average loss: 0.4001\n","saved new best metric model\n","current epoch: 18 current mean dice: 0.3148\n","best mean dice: 0.3148 at epoch: 18\n","----------\n","epoch 19/100\n","1/24, train_loss: 0.3423\n","2/24, train_loss: 0.2868\n","3/24, train_loss: 0.3422\n","4/24, train_loss: 0.4390\n","5/24, train_loss: 0.3944\n","6/24, train_loss: 0.3339\n","7/24, train_loss: 0.2967\n","8/24, train_loss: 0.4522\n","9/24, train_loss: 0.4354\n","10/24, train_loss: 0.3870\n","11/24, train_loss: 0.3984\n","12/24, train_loss: 0.3719\n","13/24, train_loss: 0.5209\n","14/24, train_loss: 0.3239\n","15/24, train_loss: 0.2931\n","16/24, train_loss: 0.4719\n","17/24, train_loss: 0.3870\n","18/24, train_loss: 0.3326\n","19/24, train_loss: 0.5003\n","20/24, train_loss: 0.4038\n","21/24, train_loss: 0.3093\n","22/24, train_loss: 0.4584\n","23/24, train_loss: 0.4598\n","24/24, train_loss: 0.4514\n","epoch 19 average loss: 0.3914\n","----------\n","epoch 20/100\n","1/24, train_loss: 0.2831\n","2/24, train_loss: 0.3792\n","3/24, train_loss: 0.5170\n","4/24, train_loss: 0.3191\n","5/24, train_loss: 0.3837\n","6/24, train_loss: 0.4268\n","7/24, train_loss: 0.4477\n","8/24, train_loss: 0.2880\n","9/24, train_loss: 0.4560\n","10/24, train_loss: 0.4526\n","11/24, train_loss: 0.4946\n","12/24, train_loss: 0.3962\n","13/24, train_loss: 0.3284\n","14/24, train_loss: 0.4662\n","15/24, train_loss: 0.3375\n","16/24, train_loss: 0.2706\n","17/24, train_loss: 0.3110\n","18/24, train_loss: 0.3572\n","19/24, train_loss: 0.3792\n","20/24, train_loss: 0.3865\n","21/24, train_loss: 0.3075\n","22/24, train_loss: 0.4298\n","23/24, train_loss: 0.4397\n","24/24, train_loss: 0.3233\n","epoch 20 average loss: 0.3825\n","current epoch: 20 current mean dice: 0.3081\n","best mean dice: 0.3148 at epoch: 18\n","----------\n","epoch 21/100\n","1/24, train_loss: 0.3122\n","2/24, train_loss: 0.2841\n","3/24, train_loss: 0.3284\n","4/24, train_loss: 0.3791\n","5/24, train_loss: 0.4222\n","6/24, train_loss: 0.3603\n","7/24, train_loss: 0.4521\n","8/24, train_loss: 0.3881\n","9/24, train_loss: 0.3278\n","10/24, train_loss: 0.2720\n","11/24, train_loss: 0.4916\n","12/24, train_loss: 0.4425\n","13/24, train_loss: 0.4363\n","14/24, train_loss: 0.2569\n","15/24, train_loss: 0.3730\n","16/24, train_loss: 0.4205\n","17/24, train_loss: 0.5114\n","18/24, train_loss: 0.3876\n","19/24, train_loss: 0.3008\n","20/24, train_loss: 0.3647\n","21/24, train_loss: 0.4562\n","22/24, train_loss: 0.3148\n","23/24, train_loss: 0.4425\n","24/24, train_loss: 0.2977\n","epoch 21 average loss: 0.3760\n","----------\n","epoch 22/100\n","1/24, train_loss: 0.4416\n","2/24, train_loss: 0.3702\n","3/24, train_loss: 0.3145\n","4/24, train_loss: 0.4317\n","5/24, train_loss: 0.3030\n","6/24, train_loss: 0.3058\n","7/24, train_loss: 0.4115\n","8/24, train_loss: 0.5059\n","9/24, train_loss: 0.3571\n","10/24, train_loss: 0.3401\n","11/24, train_loss: 0.2879\n","12/24, train_loss: 0.4318\n","13/24, train_loss: 0.3057\n","14/24, train_loss: 0.3954\n","15/24, train_loss: 0.2595\n","16/24, train_loss: 0.3580\n","17/24, train_loss: 0.4390\n","18/24, train_loss: 0.3779\n","19/24, train_loss: 0.4081\n","20/24, train_loss: 0.2905\n","21/24, train_loss: 0.2597\n","22/24, train_loss: 0.2442\n","23/24, train_loss: 0.4825\n","24/24, train_loss: 0.4504\n","epoch 22 average loss: 0.3655\n","saved new best metric model\n","current epoch: 22 current mean dice: 0.3502\n","best mean dice: 0.3502 at epoch: 22\n","----------\n","epoch 23/100\n","1/24, train_loss: 0.4292\n","2/24, train_loss: 0.4257\n","3/24, train_loss: 0.3602\n","4/24, train_loss: 0.3617\n","5/24, train_loss: 0.4365\n","6/24, train_loss: 0.3521\n","7/24, train_loss: 0.2744\n","8/24, train_loss: 0.3782\n","9/24, train_loss: 0.5015\n","10/24, train_loss: 0.2668\n","11/24, train_loss: 0.3290\n","12/24, train_loss: 0.2966\n","13/24, train_loss: 0.2846\n","14/24, train_loss: 0.4006\n","15/24, train_loss: 0.2337\n","16/24, train_loss: 0.4429\n","17/24, train_loss: 0.2513\n","18/24, train_loss: 0.4311\n","19/24, train_loss: 0.3648\n","20/24, train_loss: 0.2797\n","21/24, train_loss: 0.2932\n","22/24, train_loss: 0.2955\n","23/24, train_loss: 0.4009\n","24/24, train_loss: 0.4759\n","epoch 23 average loss: 0.3569\n","----------\n","epoch 24/100\n","1/24, train_loss: 0.4970\n","2/24, train_loss: 0.2912\n","3/24, train_loss: 0.3226\n","4/24, train_loss: 0.2392\n","5/24, train_loss: 0.3611\n","6/24, train_loss: 0.3419\n","7/24, train_loss: 0.2529\n","8/24, train_loss: 0.2734\n","9/24, train_loss: 0.2817\n","10/24, train_loss: 0.3595\n","11/24, train_loss: 0.3384\n","12/24, train_loss: 0.3908\n","13/24, train_loss: 0.4253\n","14/24, train_loss: 0.4710\n","15/24, train_loss: 0.4360\n","16/24, train_loss: 0.3425\n","17/24, train_loss: 0.2288\n","18/24, train_loss: 0.3909\n","19/24, train_loss: 0.4136\n","20/24, train_loss: 0.4073\n","21/24, train_loss: 0.4195\n","22/24, train_loss: 0.2646\n","23/24, train_loss: 0.2577\n","24/24, train_loss: 0.2727\n","epoch 24 average loss: 0.3450\n","current epoch: 24 current mean dice: 0.3383\n","best mean dice: 0.3502 at epoch: 22\n","----------\n","epoch 25/100\n","1/24, train_loss: 0.2289\n","2/24, train_loss: 0.2790\n","3/24, train_loss: 0.4177\n","4/24, train_loss: 0.3319\n","5/24, train_loss: 0.2685\n","6/24, train_loss: 0.2320\n","7/24, train_loss: 0.3122\n","8/24, train_loss: 0.4024\n","9/24, train_loss: 0.3483\n","10/24, train_loss: 0.3268\n","11/24, train_loss: 0.3454\n","12/24, train_loss: 0.3321\n","13/24, train_loss: 0.4070\n","14/24, train_loss: 0.2226\n","15/24, train_loss: 0.3824\n","16/24, train_loss: 0.2556\n","17/24, train_loss: 0.4876\n","18/24, train_loss: 0.2487\n","19/24, train_loss: 0.4097\n","20/24, train_loss: 0.3767\n","21/24, train_loss: 0.4247\n","22/24, train_loss: 0.2701\n","23/24, train_loss: 0.2558\n","24/24, train_loss: 0.4600\n","epoch 25 average loss: 0.3344\n","----------\n","epoch 26/100\n","1/24, train_loss: 0.4851\n","2/24, train_loss: 0.3404\n","3/24, train_loss: 0.2481\n","4/24, train_loss: 0.2589\n","5/24, train_loss: 0.2984\n","6/24, train_loss: 0.4201\n","7/24, train_loss: 0.2486\n","8/24, train_loss: 0.2057\n","9/24, train_loss: 0.3710\n","10/24, train_loss: 0.2646\n","11/24, train_loss: 0.3187\n","12/24, train_loss: 0.2544\n","13/24, train_loss: 0.4033\n","14/24, train_loss: 0.2353\n","15/24, train_loss: 0.3338\n","16/24, train_loss: 0.2164\n","17/24, train_loss: 0.4042\n","18/24, train_loss: 0.4553\n","19/24, train_loss: 0.3104\n","20/24, train_loss: 0.3137\n","21/24, train_loss: 0.3698\n","22/24, train_loss: 0.3931\n","23/24, train_loss: 0.2092\n","24/24, train_loss: 0.3864\n","epoch 26 average loss: 0.3227\n","saved new best metric model\n","current epoch: 26 current mean dice: 0.3549\n","best mean dice: 0.3549 at epoch: 26\n","----------\n","epoch 27/100\n","1/24, train_loss: 0.2058\n","2/24, train_loss: 0.2122\n","3/24, train_loss: 0.4123\n","4/24, train_loss: 0.3965\n","5/24, train_loss: 0.3646\n","6/24, train_loss: 0.2845\n","7/24, train_loss: 0.2474\n","8/24, train_loss: 0.3976\n","9/24, train_loss: 0.3011\n","10/24, train_loss: 0.3081\n","11/24, train_loss: 0.3235\n","12/24, train_loss: 0.4773\n","13/24, train_loss: 0.3216\n","14/24, train_loss: 0.2477\n","15/24, train_loss: 0.4495\n","16/24, train_loss: 0.2473\n","17/24, train_loss: 0.2467\n","18/24, train_loss: 0.2234\n","19/24, train_loss: 0.3045\n","20/24, train_loss: 0.1918\n","21/24, train_loss: 0.3577\n","22/24, train_loss: 0.3890\n","23/24, train_loss: 0.3801\n","24/24, train_loss: 0.2523\n","epoch 27 average loss: 0.3143\n","----------\n","epoch 28/100\n","1/24, train_loss: 0.3169\n","2/24, train_loss: 0.3008\n","3/24, train_loss: 0.2214\n","4/24, train_loss: 0.2427\n","5/24, train_loss: 0.3511\n","6/24, train_loss: 0.4461\n","7/24, train_loss: 0.2341\n","8/24, train_loss: 0.2771\n","9/24, train_loss: 0.2029\n","10/24, train_loss: 0.2562\n","11/24, train_loss: 0.3576\n","12/24, train_loss: 0.3016\n","13/24, train_loss: 0.1963\n","14/24, train_loss: 0.3784\n","15/24, train_loss: 0.3879\n","16/24, train_loss: 0.4004\n","17/24, train_loss: 0.3715\n","18/24, train_loss: 0.2430\n","19/24, train_loss: 0.2386\n","20/24, train_loss: 0.4708\n","21/24, train_loss: 0.1838\n","22/24, train_loss: 0.3114\n","23/24, train_loss: 0.3847\n","24/24, train_loss: 0.2888\n","epoch 28 average loss: 0.3068\n","current epoch: 28 current mean dice: 0.3453\n","best mean dice: 0.3549 at epoch: 26\n","----------\n","epoch 29/100\n","1/24, train_loss: 0.3102\n","2/24, train_loss: 0.2849\n","3/24, train_loss: 0.1907\n","4/24, train_loss: 0.2244\n","5/24, train_loss: 0.2934\n","6/24, train_loss: 0.4687\n","7/24, train_loss: 0.1857\n","8/24, train_loss: 0.3829\n","9/24, train_loss: 0.3756\n","10/24, train_loss: 0.3937\n","11/24, train_loss: 0.3407\n","12/24, train_loss: 0.3793\n","13/24, train_loss: 0.2236\n","14/24, train_loss: 0.4361\n","15/24, train_loss: 0.3618\n","16/24, train_loss: 0.2218\n","17/24, train_loss: 0.2698\n","18/24, train_loss: 0.2489\n","19/24, train_loss: 0.2209\n","20/24, train_loss: 0.1788\n","21/24, train_loss: 0.2889\n","22/24, train_loss: 0.2125\n","23/24, train_loss: 0.3455\n","24/24, train_loss: 0.2979\n","epoch 29 average loss: 0.2974\n","----------\n","epoch 30/100\n","1/24, train_loss: 0.1787\n","2/24, train_loss: 0.3789\n","3/24, train_loss: 0.3399\n","4/24, train_loss: 0.1745\n","5/24, train_loss: 0.1771\n","6/24, train_loss: 0.2260\n","7/24, train_loss: 0.2951\n","8/24, train_loss: 0.3736\n","9/24, train_loss: 0.4632\n","10/24, train_loss: 0.2089\n","11/24, train_loss: 0.3642\n","12/24, train_loss: 0.4314\n","13/24, train_loss: 0.2951\n","14/24, train_loss: 0.2199\n","15/24, train_loss: 0.2125\n","16/24, train_loss: 0.2801\n","17/24, train_loss: 0.2030\n","18/24, train_loss: 0.2759\n","19/24, train_loss: 0.2088\n","20/24, train_loss: 0.2685\n","21/24, train_loss: 0.3310\n","22/24, train_loss: 0.3596\n","23/24, train_loss: 0.2594\n","24/24, train_loss: 0.3829\n","epoch 30 average loss: 0.2878\n","saved new best metric model\n","current epoch: 30 current mean dice: 0.3611\n","best mean dice: 0.3611 at epoch: 30\n","----------\n","epoch 31/100\n","1/24, train_loss: 0.2150\n","2/24, train_loss: 0.2170\n","3/24, train_loss: 0.2451\n","4/24, train_loss: 0.2005\n","5/24, train_loss: 0.2661\n","6/24, train_loss: 0.1824\n","7/24, train_loss: 0.2738\n","8/24, train_loss: 0.2831\n","9/24, train_loss: 0.3461\n","10/24, train_loss: 0.4244\n","11/24, train_loss: 0.1725\n","12/24, train_loss: 0.1576\n","13/24, train_loss: 0.1970\n","14/24, train_loss: 0.2056\n","15/24, train_loss: 0.3560\n","16/24, train_loss: 0.3746\n","17/24, train_loss: 0.1979\n","18/24, train_loss: 0.3611\n","19/24, train_loss: 0.2645\n","20/24, train_loss: 0.4545\n","21/24, train_loss: 0.3235\n","22/24, train_loss: 0.3581\n","23/24, train_loss: 0.2795\n","24/24, train_loss: 0.3132\n","epoch 31 average loss: 0.2779\n","----------\n","epoch 32/100\n","1/24, train_loss: 0.3692\n","2/24, train_loss: 0.2082\n","3/24, train_loss: 0.3530\n","4/24, train_loss: 0.1969\n","5/24, train_loss: 0.1622\n","6/24, train_loss: 0.3146\n","7/24, train_loss: 0.4168\n","8/24, train_loss: 0.1946\n","9/24, train_loss: 0.1616\n","10/24, train_loss: 0.2603\n","11/24, train_loss: 0.4495\n","12/24, train_loss: 0.2021\n","13/24, train_loss: 0.3448\n","14/24, train_loss: 0.2728\n","15/24, train_loss: 0.1681\n","16/24, train_loss: 0.2707\n","17/24, train_loss: 0.2496\n","18/24, train_loss: 0.3478\n","19/24, train_loss: 0.2037\n","20/24, train_loss: 0.1902\n","21/24, train_loss: 0.3047\n","22/24, train_loss: 0.3346\n","23/24, train_loss: 0.2369\n","24/24, train_loss: 0.2600\n","epoch 32 average loss: 0.2697\n","current epoch: 32 current mean dice: 0.3402\n","best mean dice: 0.3611 at epoch: 30\n","----------\n","epoch 33/100\n","1/24, train_loss: 0.1974\n","2/24, train_loss: 0.3395\n","3/24, train_loss: 0.2491\n","4/24, train_loss: 0.2643\n","5/24, train_loss: 0.1819\n","6/24, train_loss: 0.3454\n","7/24, train_loss: 0.1886\n","8/24, train_loss: 0.1939\n","9/24, train_loss: 0.1785\n","10/24, train_loss: 0.1753\n","11/24, train_loss: 0.2503\n","12/24, train_loss: 0.1502\n","13/24, train_loss: 0.3423\n","14/24, train_loss: 0.2473\n","15/24, train_loss: 0.2265\n","16/24, train_loss: 0.2670\n","17/24, train_loss: 0.1565\n","18/24, train_loss: 0.3564\n","19/24, train_loss: 0.4426\n","20/24, train_loss: 0.4086\n","21/24, train_loss: 0.2980\n","22/24, train_loss: 0.3247\n","23/24, train_loss: 0.3130\n","24/24, train_loss: 0.1558\n","epoch 33 average loss: 0.2605\n","----------\n","epoch 34/100\n","1/24, train_loss: 0.1469\n","2/24, train_loss: 0.3192\n","3/24, train_loss: 0.2317\n","4/24, train_loss: 0.1796\n","5/24, train_loss: 0.4393\n","6/24, train_loss: 0.1369\n","7/24, train_loss: 0.3297\n","8/24, train_loss: 0.2487\n","9/24, train_loss: 0.1810\n","10/24, train_loss: 0.2996\n","11/24, train_loss: 0.2488\n","12/24, train_loss: 0.1710\n","13/24, train_loss: 0.3316\n","14/24, train_loss: 0.3339\n","15/24, train_loss: 0.3476\n","16/24, train_loss: 0.1419\n","17/24, train_loss: 0.2416\n","18/24, train_loss: 0.1745\n","19/24, train_loss: 0.3981\n","20/24, train_loss: 0.2527\n","21/24, train_loss: 0.2108\n","22/24, train_loss: 0.2880\n","23/24, train_loss: 0.1668\n","24/24, train_loss: 0.1788\n","epoch 34 average loss: 0.2500\n","current epoch: 34 current mean dice: 0.3554\n","best mean dice: 0.3611 at epoch: 30\n","----------\n","epoch 35/100\n","1/24, train_loss: 0.4330\n","2/24, train_loss: 0.1729\n","3/24, train_loss: 0.3069\n","4/24, train_loss: 0.2057\n","5/24, train_loss: 0.1706\n","6/24, train_loss: 0.3938\n","7/24, train_loss: 0.2310\n","8/24, train_loss: 0.1615\n","9/24, train_loss: 0.2203\n","10/24, train_loss: 0.3214\n","11/24, train_loss: 0.2415\n","12/24, train_loss: 0.3101\n","13/24, train_loss: 0.3341\n","14/24, train_loss: 0.1284\n","15/24, train_loss: 0.1717\n","16/24, train_loss: 0.2810\n","17/24, train_loss: 0.2734\n","18/24, train_loss: 0.2483\n","19/24, train_loss: 0.1412\n","20/24, train_loss: 0.1592\n","21/24, train_loss: 0.1377\n","22/24, train_loss: 0.1563\n","23/24, train_loss: 0.3173\n","24/24, train_loss: 0.2251\n","epoch 35 average loss: 0.2393\n","----------\n","epoch 36/100\n","1/24, train_loss: 0.1684\n","2/24, train_loss: 0.1541\n","3/24, train_loss: 0.1389\n","4/24, train_loss: 0.1368\n","5/24, train_loss: 0.2191\n","6/24, train_loss: 0.2248\n","7/24, train_loss: 0.2783\n","8/24, train_loss: 0.1665\n","9/24, train_loss: 0.3291\n","10/24, train_loss: 0.3129\n","11/24, train_loss: 0.1332\n","12/24, train_loss: 0.2490\n","13/24, train_loss: 0.2672\n","14/24, train_loss: 0.2462\n","15/24, train_loss: 0.1937\n","16/24, train_loss: 0.4241\n","17/24, train_loss: 0.3825\n","18/24, train_loss: 0.3130\n","19/24, train_loss: 0.2949\n","20/24, train_loss: 0.1556\n","21/24, train_loss: 0.1622\n","22/24, train_loss: 0.2991\n","23/24, train_loss: 0.2074\n","24/24, train_loss: 0.1460\n","epoch 36 average loss: 0.2335\n","current epoch: 36 current mean dice: 0.3569\n","best mean dice: 0.3611 at epoch: 30\n","----------\n","epoch 37/100\n","1/24, train_loss: 0.1909\n","2/24, train_loss: 0.2708\n","3/24, train_loss: 0.2858\n","4/24, train_loss: 0.3061\n","5/24, train_loss: 0.1589\n","6/24, train_loss: 0.2350\n","7/24, train_loss: 0.1549\n","8/24, train_loss: 0.1479\n","9/24, train_loss: 0.3187\n","10/24, train_loss: 0.3746\n","11/24, train_loss: 0.2906\n","12/24, train_loss: 0.2111\n","13/24, train_loss: 0.1192\n","14/24, train_loss: 0.2532\n","15/24, train_loss: 0.1517\n","16/24, train_loss: 0.2048\n","17/24, train_loss: 0.1278\n","18/24, train_loss: 0.1525\n","19/24, train_loss: 0.1396\n","20/24, train_loss: 0.2168\n","21/24, train_loss: 0.2019\n","22/24, train_loss: 0.2966\n","23/24, train_loss: 0.4172\n","24/24, train_loss: 0.1214\n","epoch 37 average loss: 0.2228\n","----------\n","epoch 38/100\n","1/24, train_loss: 0.2126\n","2/24, train_loss: 0.4131\n","3/24, train_loss: 0.1448\n","4/24, train_loss: 0.1480\n","5/24, train_loss: 0.2586\n","6/24, train_loss: 0.3091\n","7/24, train_loss: 0.1432\n","8/24, train_loss: 0.1805\n","9/24, train_loss: 0.1437\n","10/24, train_loss: 0.1139\n","11/24, train_loss: 0.1094\n","12/24, train_loss: 0.2789\n","13/24, train_loss: 0.1939\n","14/24, train_loss: 0.2843\n","15/24, train_loss: 0.2910\n","16/24, train_loss: 0.2431\n","17/24, train_loss: 0.2153\n","18/24, train_loss: 0.1461\n","19/24, train_loss: 0.2670\n","20/24, train_loss: 0.1954\n","21/24, train_loss: 0.3607\n","22/24, train_loss: 0.2057\n","23/24, train_loss: 0.1427\n","24/24, train_loss: 0.1182\n","epoch 38 average loss: 0.2133\n","saved new best metric model\n","current epoch: 38 current mean dice: 0.3686\n","best mean dice: 0.3686 at epoch: 38\n","----------\n","epoch 39/100\n","1/24, train_loss: 0.1136\n","2/24, train_loss: 0.2933\n","3/24, train_loss: 0.1386\n","4/24, train_loss: 0.1113\n","5/24, train_loss: 0.2355\n","6/24, train_loss: 0.1963\n","7/24, train_loss: 0.2633\n","8/24, train_loss: 0.1750\n","9/24, train_loss: 0.1432\n","10/24, train_loss: 0.1863\n","11/24, train_loss: 0.1891\n","12/24, train_loss: 0.1983\n","13/24, train_loss: 0.2800\n","14/24, train_loss: 0.2961\n","15/24, train_loss: 0.1343\n","16/24, train_loss: 0.2459\n","17/24, train_loss: 0.2148\n","18/24, train_loss: 0.1428\n","19/24, train_loss: 0.3565\n","20/24, train_loss: 0.1448\n","21/24, train_loss: 0.1058\n","22/24, train_loss: 0.1387\n","23/24, train_loss: 0.2781\n","24/24, train_loss: 0.4017\n","epoch 39 average loss: 0.2076\n","----------\n","epoch 40/100\n","1/24, train_loss: 0.2455\n","2/24, train_loss: 0.1883\n","3/24, train_loss: 0.1651\n","4/24, train_loss: 0.1311\n","5/24, train_loss: 0.1363\n","6/24, train_loss: 0.1510\n","7/24, train_loss: 0.1765\n","8/24, train_loss: 0.1473\n","9/24, train_loss: 0.2121\n","10/24, train_loss: 0.1346\n","11/24, train_loss: 0.3506\n","12/24, train_loss: 0.2332\n","13/24, train_loss: 0.0999\n","14/24, train_loss: 0.1956\n","15/24, train_loss: 0.3972\n","16/24, train_loss: 0.1978\n","17/24, train_loss: 0.2770\n","18/24, train_loss: 0.2736\n","19/24, train_loss: 0.2575\n","20/24, train_loss: 0.1016\n","21/24, train_loss: 0.1313\n","22/24, train_loss: 0.2848\n","23/24, train_loss: 0.1121\n","24/24, train_loss: 0.2571\n","epoch 40 average loss: 0.2024\n","saved new best metric model\n","current epoch: 40 current mean dice: 0.3791\n","best mean dice: 0.3791 at epoch: 40\n","----------\n","epoch 41/100\n","1/24, train_loss: 0.0994\n","2/24, train_loss: 0.1248\n","3/24, train_loss: 0.1624\n","4/24, train_loss: 0.1395\n","5/24, train_loss: 0.1978\n","6/24, train_loss: 0.1252\n","7/24, train_loss: 0.3903\n","8/24, train_loss: 0.2516\n","9/24, train_loss: 0.1718\n","10/24, train_loss: 0.1845\n","11/24, train_loss: 0.1320\n","12/24, train_loss: 0.2442\n","13/24, train_loss: 0.2162\n","14/24, train_loss: 0.1063\n","15/24, train_loss: 0.1178\n","16/24, train_loss: 0.2595\n","17/24, train_loss: 0.2259\n","18/24, train_loss: 0.1831\n","19/24, train_loss: 0.2590\n","20/24, train_loss: 0.1768\n","21/24, train_loss: 0.1242\n","22/24, train_loss: 0.3381\n","23/24, train_loss: 0.2803\n","24/24, train_loss: 0.0996\n","epoch 41 average loss: 0.1921\n","----------\n","epoch 42/100\n","1/24, train_loss: 0.1858\n","2/24, train_loss: 0.1672\n","3/24, train_loss: 0.1228\n","4/24, train_loss: 0.1121\n","5/24, train_loss: 0.2675\n","6/24, train_loss: 0.0971\n","7/24, train_loss: 0.2460\n","8/24, train_loss: 0.3804\n","9/24, train_loss: 0.1791\n","10/24, train_loss: 0.1132\n","11/24, train_loss: 0.2189\n","12/24, train_loss: 0.1301\n","13/24, train_loss: 0.1173\n","14/24, train_loss: 0.1483\n","15/24, train_loss: 0.2074\n","16/24, train_loss: 0.1150\n","17/24, train_loss: 0.0970\n","18/24, train_loss: 0.0867\n","19/24, train_loss: 0.1617\n","20/24, train_loss: 0.2412\n","21/24, train_loss: 0.1718\n","22/24, train_loss: 0.2448\n","23/24, train_loss: 0.2297\n","24/24, train_loss: 0.3230\n","epoch 42 average loss: 0.1818\n","current epoch: 42 current mean dice: 0.3661\n","best mean dice: 0.3791 at epoch: 40\n","----------\n","epoch 43/100\n","1/24, train_loss: 0.2609\n","2/24, train_loss: 0.0903\n","3/24, train_loss: 0.1132\n","4/24, train_loss: 0.2221\n","5/24, train_loss: 0.3170\n","6/24, train_loss: 0.1669\n","7/24, train_loss: 0.0899\n","8/24, train_loss: 0.2169\n","9/24, train_loss: 0.1703\n","10/24, train_loss: 0.1273\n","11/24, train_loss: 0.2381\n","12/24, train_loss: 0.1055\n","13/24, train_loss: 0.1106\n","14/24, train_loss: 0.2358\n","15/24, train_loss: 0.1552\n","16/24, train_loss: 0.3725\n","17/24, train_loss: 0.1950\n","18/24, train_loss: 0.1100\n","19/24, train_loss: 0.1385\n","20/24, train_loss: 0.2343\n","21/24, train_loss: 0.1653\n","22/24, train_loss: 0.1740\n","23/24, train_loss: 0.1126\n","24/24, train_loss: 0.0917\n","epoch 43 average loss: 0.1756\n","----------\n","epoch 44/100\n","1/24, train_loss: 0.1486\n","2/24, train_loss: 0.1119\n","3/24, train_loss: 0.3659\n","4/24, train_loss: 0.1598\n","5/24, train_loss: 0.1547\n","6/24, train_loss: 0.0876\n","7/24, train_loss: 0.1021\n","8/24, train_loss: 0.0851\n","9/24, train_loss: 0.0803\n","10/24, train_loss: 0.0991\n","11/24, train_loss: 0.2290\n","12/24, train_loss: 0.1076\n","13/24, train_loss: 0.2272\n","14/24, train_loss: 0.1307\n","15/24, train_loss: 0.1063\n","16/24, train_loss: 0.3095\n","17/24, train_loss: 0.1099\n","18/24, train_loss: 0.2189\n","19/24, train_loss: 0.1576\n","20/24, train_loss: 0.2281\n","21/24, train_loss: 0.1652\n","22/24, train_loss: 0.2102\n","23/24, train_loss: 0.1831\n","24/24, train_loss: 0.2483\n","epoch 44 average loss: 0.1678\n","current epoch: 44 current mean dice: 0.3704\n","best mean dice: 0.3791 at epoch: 40\n","----------\n","epoch 45/100\n","1/24, train_loss: 0.1065\n","2/24, train_loss: 0.1356\n","3/24, train_loss: 0.2385\n","4/24, train_loss: 0.1796\n","5/24, train_loss: 0.1026\n","6/24, train_loss: 0.2195\n","7/24, train_loss: 0.1045\n","8/24, train_loss: 0.0812\n","9/24, train_loss: 0.0783\n","10/24, train_loss: 0.1524\n","11/24, train_loss: 0.2123\n","12/24, train_loss: 0.2187\n","13/24, train_loss: 0.1024\n","14/24, train_loss: 0.2125\n","15/24, train_loss: 0.3544\n","16/24, train_loss: 0.1607\n","17/24, train_loss: 0.1411\n","18/24, train_loss: 0.1448\n","19/24, train_loss: 0.0802\n","20/24, train_loss: 0.2940\n","21/24, train_loss: 0.1984\n","22/24, train_loss: 0.0986\n","23/24, train_loss: 0.1028\n","24/24, train_loss: 0.1491\n","epoch 45 average loss: 0.1612\n","----------\n","epoch 46/100\n","1/24, train_loss: 0.1926\n","2/24, train_loss: 0.2068\n","3/24, train_loss: 0.1016\n","4/24, train_loss: 0.0835\n","5/24, train_loss: 0.0919\n","6/24, train_loss: 0.2908\n","7/24, train_loss: 0.1728\n","8/24, train_loss: 0.1014\n","9/24, train_loss: 0.1433\n","10/24, train_loss: 0.2107\n","11/24, train_loss: 0.0926\n","12/24, train_loss: 0.1506\n","13/24, train_loss: 0.1261\n","14/24, train_loss: 0.1484\n","15/24, train_loss: 0.1505\n","16/24, train_loss: 0.1014\n","17/24, train_loss: 0.2016\n","18/24, train_loss: 0.0776\n","19/24, train_loss: 0.1363\n","20/24, train_loss: 0.3425\n","21/24, train_loss: 0.2047\n","22/24, train_loss: 0.0974\n","23/24, train_loss: 0.0761\n","24/24, train_loss: 0.2257\n","epoch 46 average loss: 0.1553\n","saved new best metric model\n","current epoch: 46 current mean dice: 0.3797\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 47/100\n","1/24, train_loss: 0.0737\n","2/24, train_loss: 0.2099\n","3/24, train_loss: 0.0988\n","4/24, train_loss: 0.0906\n","5/24, train_loss: 0.0878\n","6/24, train_loss: 0.2190\n","7/24, train_loss: 0.1062\n","8/24, train_loss: 0.2061\n","9/24, train_loss: 0.2813\n","10/24, train_loss: 0.2090\n","11/24, train_loss: 0.0970\n","12/24, train_loss: 0.1391\n","13/24, train_loss: 0.1950\n","14/24, train_loss: 0.1648\n","15/24, train_loss: 0.1384\n","16/24, train_loss: 0.0769\n","17/24, train_loss: 0.0764\n","18/24, train_loss: 0.1834\n","19/24, train_loss: 0.1336\n","20/24, train_loss: 0.1395\n","21/24, train_loss: 0.3348\n","22/24, train_loss: 0.1157\n","23/24, train_loss: 0.1441\n","24/24, train_loss: 0.0925\n","epoch 47 average loss: 0.1506\n","----------\n","epoch 48/100\n","1/24, train_loss: 0.2721\n","2/24, train_loss: 0.1262\n","3/24, train_loss: 0.1311\n","4/24, train_loss: 0.1371\n","5/24, train_loss: 0.1924\n","6/24, train_loss: 0.0792\n","7/24, train_loss: 0.0932\n","8/24, train_loss: 0.0705\n","9/24, train_loss: 0.1379\n","10/24, train_loss: 0.1895\n","11/24, train_loss: 0.3291\n","12/24, train_loss: 0.1102\n","13/24, train_loss: 0.1620\n","14/24, train_loss: 0.1774\n","15/24, train_loss: 0.0893\n","16/24, train_loss: 0.2087\n","17/24, train_loss: 0.0707\n","18/24, train_loss: 0.0811\n","19/24, train_loss: 0.1915\n","20/24, train_loss: 0.0921\n","21/24, train_loss: 0.0966\n","22/24, train_loss: 0.1383\n","23/24, train_loss: 0.0893\n","24/24, train_loss: 0.1914\n","epoch 48 average loss: 0.1440\n","current epoch: 48 current mean dice: 0.3740\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 49/100\n","1/24, train_loss: 0.1247\n","2/24, train_loss: 0.1062\n","3/24, train_loss: 0.1815\n","4/24, train_loss: 0.2660\n","5/24, train_loss: 0.0775\n","6/24, train_loss: 0.1234\n","7/24, train_loss: 0.0930\n","8/24, train_loss: 0.0898\n","9/24, train_loss: 0.0673\n","10/24, train_loss: 0.2042\n","11/24, train_loss: 0.0809\n","12/24, train_loss: 0.3214\n","13/24, train_loss: 0.1358\n","14/24, train_loss: 0.1836\n","15/24, train_loss: 0.1767\n","16/24, train_loss: 0.1847\n","17/24, train_loss: 0.1557\n","18/24, train_loss: 0.1327\n","19/24, train_loss: 0.0786\n","20/24, train_loss: 0.0881\n","21/24, train_loss: 0.0920\n","22/24, train_loss: 0.1668\n","23/24, train_loss: 0.0680\n","24/24, train_loss: 0.1245\n","epoch 49 average loss: 0.1385\n","----------\n","epoch 50/100\n","1/24, train_loss: 0.0873\n","2/24, train_loss: 0.0850\n","3/24, train_loss: 0.3171\n","4/24, train_loss: 0.2597\n","5/24, train_loss: 0.1638\n","6/24, train_loss: 0.1349\n","7/24, train_loss: 0.1865\n","8/24, train_loss: 0.0663\n","9/24, train_loss: 0.1472\n","10/24, train_loss: 0.1754\n","11/24, train_loss: 0.1338\n","12/24, train_loss: 0.1751\n","13/24, train_loss: 0.1683\n","14/24, train_loss: 0.1054\n","15/24, train_loss: 0.0781\n","16/24, train_loss: 0.1233\n","17/24, train_loss: 0.1138\n","18/24, train_loss: 0.0849\n","19/24, train_loss: 0.0823\n","20/24, train_loss: 0.0827\n","21/24, train_loss: 0.1236\n","22/24, train_loss: 0.0617\n","23/24, train_loss: 0.0931\n","24/24, train_loss: 0.2012\n","epoch 50 average loss: 0.1354\n","current epoch: 50 current mean dice: 0.3610\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 51/100\n","1/24, train_loss: 0.1317\n","2/24, train_loss: 0.1460\n","3/24, train_loss: 0.1174\n","4/24, train_loss: 0.0811\n","5/24, train_loss: 0.0851\n","6/24, train_loss: 0.1210\n","7/24, train_loss: 0.0626\n","8/24, train_loss: 0.0777\n","9/24, train_loss: 0.0777\n","10/24, train_loss: 0.1007\n","11/24, train_loss: 0.1732\n","12/24, train_loss: 0.0643\n","13/24, train_loss: 0.1676\n","14/24, train_loss: 0.1896\n","15/24, train_loss: 0.3030\n","16/24, train_loss: 0.0858\n","17/24, train_loss: 0.0592\n","18/24, train_loss: 0.0862\n","19/24, train_loss: 0.1394\n","20/24, train_loss: 0.2459\n","21/24, train_loss: 0.1097\n","22/24, train_loss: 0.1760\n","23/24, train_loss: 0.1746\n","24/24, train_loss: 0.1613\n","epoch 51 average loss: 0.1307\n","----------\n","epoch 52/100\n","1/24, train_loss: 0.1256\n","2/24, train_loss: 0.1591\n","3/24, train_loss: 0.0762\n","4/24, train_loss: 0.1060\n","5/24, train_loss: 0.0622\n","6/24, train_loss: 0.0848\n","7/24, train_loss: 0.0565\n","8/24, train_loss: 0.0793\n","9/24, train_loss: 0.2369\n","10/24, train_loss: 0.1583\n","11/24, train_loss: 0.1267\n","12/24, train_loss: 0.1337\n","13/24, train_loss: 0.1701\n","14/24, train_loss: 0.0957\n","15/24, train_loss: 0.0706\n","16/24, train_loss: 0.0760\n","17/24, train_loss: 0.0825\n","18/24, train_loss: 0.1869\n","19/24, train_loss: 0.1702\n","20/24, train_loss: 0.1559\n","21/24, train_loss: 0.1058\n","22/24, train_loss: 0.1096\n","23/24, train_loss: 0.0597\n","24/24, train_loss: 0.2903\n","epoch 52 average loss: 0.1241\n","current epoch: 52 current mean dice: 0.3619\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 53/100\n","1/24, train_loss: 0.1751\n","2/24, train_loss: 0.1195\n","3/24, train_loss: 0.0645\n","4/24, train_loss: 0.1495\n","5/24, train_loss: 0.0937\n","6/24, train_loss: 0.0740\n","7/24, train_loss: 0.0752\n","8/24, train_loss: 0.1028\n","9/24, train_loss: 0.1720\n","10/24, train_loss: 0.1633\n","11/24, train_loss: 0.0583\n","12/24, train_loss: 0.0783\n","13/24, train_loss: 0.1254\n","14/24, train_loss: 0.0604\n","15/24, train_loss: 0.1043\n","16/24, train_loss: 0.1026\n","17/24, train_loss: 0.0692\n","18/24, train_loss: 0.2876\n","19/24, train_loss: 0.0535\n","20/24, train_loss: 0.1607\n","21/24, train_loss: 0.1516\n","22/24, train_loss: 0.1138\n","23/24, train_loss: 0.0684\n","24/24, train_loss: 0.2217\n","epoch 53 average loss: 0.1185\n","----------\n","epoch 54/100\n","1/24, train_loss: 0.2797\n","2/24, train_loss: 0.1223\n","3/24, train_loss: 0.1555\n","4/24, train_loss: 0.1052\n","5/24, train_loss: 0.1517\n","6/24, train_loss: 0.0604\n","7/24, train_loss: 0.0690\n","8/24, train_loss: 0.0764\n","9/24, train_loss: 0.0728\n","10/24, train_loss: 0.0662\n","11/24, train_loss: 0.0997\n","12/24, train_loss: 0.1750\n","13/24, train_loss: 0.0505\n","14/24, train_loss: 0.1454\n","15/24, train_loss: 0.2167\n","16/24, train_loss: 0.0763\n","17/24, train_loss: 0.0938\n","18/24, train_loss: 0.0701\n","19/24, train_loss: 0.1449\n","20/24, train_loss: 0.0973\n","21/24, train_loss: 0.0534\n","22/24, train_loss: 0.1669\n","23/24, train_loss: 0.1074\n","24/24, train_loss: 0.1121\n","epoch 54 average loss: 0.1154\n","current epoch: 54 current mean dice: 0.3430\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 55/100\n","1/24, train_loss: 0.1480\n","2/24, train_loss: 0.2192\n","3/24, train_loss: 0.1005\n","4/24, train_loss: 0.0597\n","5/24, train_loss: 0.1439\n","6/24, train_loss: 0.1660\n","7/24, train_loss: 0.1098\n","8/24, train_loss: 0.0762\n","9/24, train_loss: 0.0679\n","10/24, train_loss: 0.1489\n","11/24, train_loss: 0.0973\n","12/24, train_loss: 0.0756\n","13/24, train_loss: 0.2720\n","14/24, train_loss: 0.0688\n","15/24, train_loss: 0.1612\n","16/24, train_loss: 0.0655\n","17/24, train_loss: 0.1071\n","18/24, train_loss: 0.0938\n","19/24, train_loss: 0.1228\n","20/24, train_loss: 0.0552\n","21/24, train_loss: 0.0617\n","22/24, train_loss: 0.0508\n","23/24, train_loss: 0.1371\n","24/24, train_loss: 0.0971\n","epoch 55 average loss: 0.1128\n","----------\n","epoch 56/100\n","1/24, train_loss: 0.0816\n","2/24, train_loss: 0.0606\n","3/24, train_loss: 0.0612\n","4/24, train_loss: 0.0478\n","5/24, train_loss: 0.1354\n","6/24, train_loss: 0.2628\n","7/24, train_loss: 0.1086\n","8/24, train_loss: 0.0983\n","9/24, train_loss: 0.0933\n","10/24, train_loss: 0.2052\n","11/24, train_loss: 0.0922\n","12/24, train_loss: 0.0656\n","13/24, train_loss: 0.0716\n","14/24, train_loss: 0.1580\n","15/24, train_loss: 0.1420\n","16/24, train_loss: 0.0649\n","17/24, train_loss: 0.1385\n","18/24, train_loss: 0.1130\n","19/24, train_loss: 0.0529\n","20/24, train_loss: 0.1132\n","21/24, train_loss: 0.0519\n","22/24, train_loss: 0.1383\n","23/24, train_loss: 0.1408\n","24/24, train_loss: 0.0612\n","epoch 56 average loss: 0.1066\n","current epoch: 56 current mean dice: 0.3635\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 57/100\n","1/24, train_loss: 0.1078\n","2/24, train_loss: 0.0601\n","3/24, train_loss: 0.1301\n","4/24, train_loss: 0.1362\n","5/24, train_loss: 0.0474\n","6/24, train_loss: 0.0657\n","7/24, train_loss: 0.1016\n","8/24, train_loss: 0.1540\n","9/24, train_loss: 0.0714\n","10/24, train_loss: 0.2609\n","11/24, train_loss: 0.0635\n","12/24, train_loss: 0.0867\n","13/24, train_loss: 0.0467\n","14/24, train_loss: 0.0601\n","15/24, train_loss: 0.1938\n","16/24, train_loss: 0.0871\n","17/24, train_loss: 0.0628\n","18/24, train_loss: 0.0517\n","19/24, train_loss: 0.1348\n","20/24, train_loss: 0.0917\n","21/24, train_loss: 0.1314\n","22/24, train_loss: 0.1010\n","23/24, train_loss: 0.1303\n","24/24, train_loss: 0.0883\n","epoch 57 average loss: 0.1027\n","----------\n","epoch 58/100\n","1/24, train_loss: 0.0877\n","2/24, train_loss: 0.1290\n","3/24, train_loss: 0.1073\n","4/24, train_loss: 0.0464\n","5/24, train_loss: 0.1899\n","6/24, train_loss: 0.1249\n","7/24, train_loss: 0.2471\n","8/24, train_loss: 0.1504\n","9/24, train_loss: 0.0556\n","10/24, train_loss: 0.0617\n","11/24, train_loss: 0.0890\n","12/24, train_loss: 0.0957\n","13/24, train_loss: 0.0861\n","14/24, train_loss: 0.1315\n","15/24, train_loss: 0.1411\n","16/24, train_loss: 0.0505\n","17/24, train_loss: 0.0804\n","18/24, train_loss: 0.0506\n","19/24, train_loss: 0.0513\n","20/24, train_loss: 0.0624\n","21/24, train_loss: 0.1014\n","22/24, train_loss: 0.1260\n","23/24, train_loss: 0.0582\n","24/24, train_loss: 0.0711\n","epoch 58 average loss: 0.0998\n","current epoch: 58 current mean dice: 0.3501\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 59/100\n","1/24, train_loss: 0.0564\n","2/24, train_loss: 0.0556\n","3/24, train_loss: 0.0451\n","4/24, train_loss: 0.0941\n","5/24, train_loss: 0.1459\n","6/24, train_loss: 0.0667\n","7/24, train_loss: 0.1015\n","8/24, train_loss: 0.0623\n","9/24, train_loss: 0.0614\n","10/24, train_loss: 0.1860\n","11/24, train_loss: 0.1060\n","12/24, train_loss: 0.0739\n","13/24, train_loss: 0.1000\n","14/24, train_loss: 0.2400\n","15/24, train_loss: 0.0865\n","16/24, train_loss: 0.0568\n","17/24, train_loss: 0.1435\n","18/24, train_loss: 0.0511\n","19/24, train_loss: 0.0876\n","20/24, train_loss: 0.0515\n","21/24, train_loss: 0.1270\n","22/24, train_loss: 0.1248\n","23/24, train_loss: 0.1189\n","24/24, train_loss: 0.1308\n","epoch 59 average loss: 0.0989\n","----------\n","epoch 60/100\n","1/24, train_loss: 0.0839\n","2/24, train_loss: 0.0591\n","3/24, train_loss: 0.0757\n","4/24, train_loss: 0.0611\n","5/24, train_loss: 0.0646\n","6/24, train_loss: 0.1448\n","7/24, train_loss: 0.0469\n","8/24, train_loss: 0.1249\n","9/24, train_loss: 0.1184\n","10/24, train_loss: 0.0817\n","11/24, train_loss: 0.2295\n","12/24, train_loss: 0.1390\n","13/24, train_loss: 0.1120\n","14/24, train_loss: 0.0942\n","15/24, train_loss: 0.0510\n","16/24, train_loss: 0.0833\n","17/24, train_loss: 0.0563\n","18/24, train_loss: 0.0680\n","19/24, train_loss: 0.0999\n","20/24, train_loss: 0.1798\n","21/24, train_loss: 0.1185\n","22/24, train_loss: 0.1200\n","23/24, train_loss: 0.0606\n","24/24, train_loss: 0.0531\n","epoch 60 average loss: 0.0969\n","current epoch: 60 current mean dice: 0.3287\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 61/100\n","1/24, train_loss: 0.1497\n","2/24, train_loss: 0.0955\n","3/24, train_loss: 0.1082\n","4/24, train_loss: 0.1199\n","5/24, train_loss: 0.1167\n","6/24, train_loss: 0.0778\n","7/24, train_loss: 0.0532\n","8/24, train_loss: 0.0841\n","9/24, train_loss: 0.0890\n","10/24, train_loss: 0.0836\n","11/24, train_loss: 0.2228\n","12/24, train_loss: 0.0464\n","13/24, train_loss: 0.1398\n","14/24, train_loss: 0.0425\n","15/24, train_loss: 0.0613\n","16/24, train_loss: 0.1761\n","17/24, train_loss: 0.0550\n","18/24, train_loss: 0.0519\n","19/24, train_loss: 0.1374\n","20/24, train_loss: 0.1163\n","21/24, train_loss: 0.0679\n","22/24, train_loss: 0.0557\n","23/24, train_loss: 0.0550\n","24/24, train_loss: 0.0852\n","epoch 61 average loss: 0.0955\n","----------\n","epoch 62/100\n","1/24, train_loss: 0.0469\n","2/24, train_loss: 0.0950\n","3/24, train_loss: 0.1275\n","4/24, train_loss: 0.0833\n","5/24, train_loss: 0.2163\n","6/24, train_loss: 0.1220\n","7/24, train_loss: 0.0793\n","8/24, train_loss: 0.1056\n","9/24, train_loss: 0.0677\n","10/24, train_loss: 0.0521\n","11/24, train_loss: 0.1069\n","12/24, train_loss: 0.1101\n","13/24, train_loss: 0.0518\n","14/24, train_loss: 0.0653\n","15/24, train_loss: 0.0512\n","16/24, train_loss: 0.0699\n","17/24, train_loss: 0.1156\n","18/24, train_loss: 0.0525\n","19/24, train_loss: 0.0473\n","20/24, train_loss: 0.1301\n","21/24, train_loss: 0.1694\n","22/24, train_loss: 0.0400\n","23/24, train_loss: 0.0772\n","24/24, train_loss: 0.0830\n","epoch 62 average loss: 0.0902\n","current epoch: 62 current mean dice: 0.3130\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 63/100\n","1/24, train_loss: 0.0721\n","2/24, train_loss: 0.0832\n","3/24, train_loss: 0.1289\n","4/24, train_loss: 0.0640\n","5/24, train_loss: 0.1114\n","6/24, train_loss: 0.1190\n","7/24, train_loss: 0.1214\n","8/24, train_loss: 0.0703\n","9/24, train_loss: 0.1016\n","10/24, train_loss: 0.1666\n","11/24, train_loss: 0.0486\n","12/24, train_loss: 0.0813\n","13/24, train_loss: 0.0516\n","14/24, train_loss: 0.0494\n","15/24, train_loss: 0.0801\n","16/24, train_loss: 0.0514\n","17/24, train_loss: 0.1170\n","18/24, train_loss: 0.1054\n","19/24, train_loss: 0.0924\n","20/24, train_loss: 0.2097\n","21/24, train_loss: 0.0555\n","22/24, train_loss: 0.0540\n","23/24, train_loss: 0.0473\n","24/24, train_loss: 0.0650\n","epoch 63 average loss: 0.0895\n","----------\n","epoch 64/100\n","1/24, train_loss: 0.0659\n","2/24, train_loss: 0.0481\n","3/24, train_loss: 0.0481\n","4/24, train_loss: 0.2005\n","5/24, train_loss: 0.0475\n","6/24, train_loss: 0.0653\n","7/24, train_loss: 0.0434\n","8/24, train_loss: 0.1089\n","9/24, train_loss: 0.1153\n","10/24, train_loss: 0.0907\n","11/24, train_loss: 0.1316\n","12/24, train_loss: 0.1087\n","13/24, train_loss: 0.0799\n","14/24, train_loss: 0.0438\n","15/24, train_loss: 0.0827\n","16/24, train_loss: 0.0826\n","17/24, train_loss: 0.1243\n","18/24, train_loss: 0.0386\n","19/24, train_loss: 0.0401\n","20/24, train_loss: 0.0699\n","21/24, train_loss: 0.0949\n","22/24, train_loss: 0.1077\n","23/24, train_loss: 0.1638\n","24/24, train_loss: 0.0546\n","epoch 64 average loss: 0.0857\n","current epoch: 64 current mean dice: 0.3506\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 65/100\n","1/24, train_loss: 0.0636\n","2/24, train_loss: 0.1995\n","3/24, train_loss: 0.1132\n","4/24, train_loss: 0.0459\n","5/24, train_loss: 0.0865\n","6/24, train_loss: 0.0804\n","7/24, train_loss: 0.0594\n","8/24, train_loss: 0.1171\n","9/24, train_loss: 0.0417\n","10/24, train_loss: 0.1077\n","11/24, train_loss: 0.1026\n","12/24, train_loss: 0.0404\n","13/24, train_loss: 0.0828\n","14/24, train_loss: 0.0730\n","15/24, train_loss: 0.0529\n","16/24, train_loss: 0.0670\n","17/24, train_loss: 0.0730\n","18/24, train_loss: 0.0510\n","19/24, train_loss: 0.1085\n","20/24, train_loss: 0.0411\n","21/24, train_loss: 0.1093\n","22/24, train_loss: 0.0460\n","23/24, train_loss: 0.0459\n","24/24, train_loss: 0.1577\n","epoch 65 average loss: 0.0819\n","----------\n","epoch 66/100\n","1/24, train_loss: 0.0585\n","2/24, train_loss: 0.1044\n","3/24, train_loss: 0.0731\n","4/24, train_loss: 0.0645\n","5/24, train_loss: 0.0797\n","6/24, train_loss: 0.0723\n","7/24, train_loss: 0.1431\n","8/24, train_loss: 0.0809\n","9/24, train_loss: 0.0427\n","10/24, train_loss: 0.1061\n","11/24, train_loss: 0.0434\n","12/24, train_loss: 0.0490\n","13/24, train_loss: 0.0368\n","14/24, train_loss: 0.0656\n","15/24, train_loss: 0.0421\n","16/24, train_loss: 0.1008\n","17/24, train_loss: 0.0469\n","18/24, train_loss: 0.1133\n","19/24, train_loss: 0.0817\n","20/24, train_loss: 0.0512\n","21/24, train_loss: 0.0950\n","22/24, train_loss: 0.0382\n","23/24, train_loss: 0.1903\n","24/24, train_loss: 0.1006\n","epoch 66 average loss: 0.0783\n","current epoch: 66 current mean dice: 0.3595\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 67/100\n","1/24, train_loss: 0.0682\n","2/24, train_loss: 0.0789\n","3/24, train_loss: 0.1809\n","4/24, train_loss: 0.0703\n","5/24, train_loss: 0.0900\n","6/24, train_loss: 0.0604\n","7/24, train_loss: 0.0435\n","8/24, train_loss: 0.1392\n","9/24, train_loss: 0.0980\n","10/24, train_loss: 0.0573\n","11/24, train_loss: 0.0779\n","12/24, train_loss: 0.1017\n","13/24, train_loss: 0.0454\n","14/24, train_loss: 0.0816\n","15/24, train_loss: 0.0969\n","16/24, train_loss: 0.0380\n","17/24, train_loss: 0.0667\n","18/24, train_loss: 0.1102\n","19/24, train_loss: 0.0361\n","20/24, train_loss: 0.0431\n","21/24, train_loss: 0.0970\n","22/24, train_loss: 0.0376\n","23/24, train_loss: 0.0355\n","24/24, train_loss: 0.0433\n","epoch 67 average loss: 0.0749\n","----------\n","epoch 68/100\n","1/24, train_loss: 0.0888\n","2/24, train_loss: 0.0606\n","3/24, train_loss: 0.0341\n","4/24, train_loss: 0.1881\n","5/24, train_loss: 0.0697\n","6/24, train_loss: 0.0780\n","7/24, train_loss: 0.0406\n","8/24, train_loss: 0.0429\n","9/24, train_loss: 0.0788\n","10/24, train_loss: 0.1007\n","11/24, train_loss: 0.0655\n","12/24, train_loss: 0.0441\n","13/24, train_loss: 0.1085\n","14/24, train_loss: 0.0402\n","15/24, train_loss: 0.1352\n","16/24, train_loss: 0.0335\n","17/24, train_loss: 0.0891\n","18/24, train_loss: 0.0806\n","19/24, train_loss: 0.0613\n","20/24, train_loss: 0.0919\n","21/24, train_loss: 0.0406\n","22/24, train_loss: 0.0545\n","23/24, train_loss: 0.0427\n","24/24, train_loss: 0.0970\n","epoch 68 average loss: 0.0736\n","current epoch: 68 current mean dice: 0.3383\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 69/100\n","1/24, train_loss: 0.0564\n","2/24, train_loss: 0.1054\n","3/24, train_loss: 0.0746\n","4/24, train_loss: 0.0413\n","5/24, train_loss: 0.0954\n","6/24, train_loss: 0.0393\n","7/24, train_loss: 0.1288\n","8/24, train_loss: 0.0901\n","9/24, train_loss: 0.0592\n","10/24, train_loss: 0.0666\n","11/24, train_loss: 0.0631\n","12/24, train_loss: 0.0805\n","13/24, train_loss: 0.0701\n","14/24, train_loss: 0.0539\n","15/24, train_loss: 0.0924\n","16/24, train_loss: 0.0444\n","17/24, train_loss: 0.0396\n","18/24, train_loss: 0.0417\n","19/24, train_loss: 0.0895\n","20/24, train_loss: 0.0335\n","21/24, train_loss: 0.1777\n","22/24, train_loss: 0.0342\n","23/24, train_loss: 0.0422\n","24/24, train_loss: 0.1008\n","epoch 69 average loss: 0.0717\n","----------\n","epoch 70/100\n","1/24, train_loss: 0.1641\n","2/24, train_loss: 0.0857\n","3/24, train_loss: 0.0651\n","4/24, train_loss: 0.0395\n","5/24, train_loss: 0.0918\n","6/24, train_loss: 0.0630\n","7/24, train_loss: 0.0410\n","8/24, train_loss: 0.0433\n","9/24, train_loss: 0.0508\n","10/24, train_loss: 0.1020\n","11/24, train_loss: 0.0430\n","12/24, train_loss: 0.0374\n","13/24, train_loss: 0.0893\n","14/24, train_loss: 0.0590\n","15/24, train_loss: 0.0550\n","16/24, train_loss: 0.0337\n","17/24, train_loss: 0.1251\n","18/24, train_loss: 0.0736\n","19/24, train_loss: 0.0860\n","20/24, train_loss: 0.1010\n","21/24, train_loss: 0.0763\n","22/24, train_loss: 0.0376\n","23/24, train_loss: 0.0717\n","24/24, train_loss: 0.0528\n","epoch 70 average loss: 0.0703\n","current epoch: 70 current mean dice: 0.2898\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 71/100\n","1/24, train_loss: 0.0346\n","2/24, train_loss: 0.0348\n","3/24, train_loss: 0.0501\n","4/24, train_loss: 0.0398\n","5/24, train_loss: 0.0755\n","6/24, train_loss: 0.0665\n","7/24, train_loss: 0.0898\n","8/24, train_loss: 0.1686\n","9/24, train_loss: 0.0922\n","10/24, train_loss: 0.0319\n","11/24, train_loss: 0.0343\n","12/24, train_loss: 0.0394\n","13/24, train_loss: 0.0394\n","14/24, train_loss: 0.0520\n","15/24, train_loss: 0.0838\n","16/24, train_loss: 0.0560\n","17/24, train_loss: 0.0896\n","18/24, train_loss: 0.0424\n","19/24, train_loss: 0.1243\n","20/24, train_loss: 0.0998\n","21/24, train_loss: 0.0969\n","22/24, train_loss: 0.0677\n","23/24, train_loss: 0.0616\n","24/24, train_loss: 0.0648\n","epoch 71 average loss: 0.0682\n","----------\n","epoch 72/100\n","1/24, train_loss: 0.0531\n","2/24, train_loss: 0.1175\n","3/24, train_loss: 0.0556\n","4/24, train_loss: 0.0509\n","5/24, train_loss: 0.0344\n","6/24, train_loss: 0.0377\n","7/24, train_loss: 0.0860\n","8/24, train_loss: 0.0859\n","9/24, train_loss: 0.0959\n","10/24, train_loss: 0.0322\n","11/24, train_loss: 0.0803\n","12/24, train_loss: 0.0649\n","13/24, train_loss: 0.0744\n","14/24, train_loss: 0.0404\n","15/24, train_loss: 0.0374\n","16/24, train_loss: 0.1662\n","17/24, train_loss: 0.0624\n","18/24, train_loss: 0.0669\n","19/24, train_loss: 0.0633\n","20/24, train_loss: 0.0802\n","21/24, train_loss: 0.0932\n","22/24, train_loss: 0.0398\n","23/24, train_loss: 0.0343\n","24/24, train_loss: 0.0384\n","epoch 72 average loss: 0.0663\n","current epoch: 72 current mean dice: 0.3264\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 73/100\n","1/24, train_loss: 0.0376\n","2/24, train_loss: 0.0608\n","3/24, train_loss: 0.0842\n","4/24, train_loss: 0.0833\n","5/24, train_loss: 0.0305\n","6/24, train_loss: 0.0320\n","7/24, train_loss: 0.1153\n","8/24, train_loss: 0.0302\n","9/24, train_loss: 0.0939\n","10/24, train_loss: 0.0514\n","11/24, train_loss: 0.1559\n","12/24, train_loss: 0.0388\n","13/24, train_loss: 0.0520\n","14/24, train_loss: 0.0313\n","15/24, train_loss: 0.0646\n","16/24, train_loss: 0.0670\n","17/24, train_loss: 0.0362\n","18/24, train_loss: 0.0768\n","19/24, train_loss: 0.0763\n","20/24, train_loss: 0.0386\n","21/24, train_loss: 0.0585\n","22/24, train_loss: 0.0700\n","23/24, train_loss: 0.0541\n","24/24, train_loss: 0.0916\n","epoch 73 average loss: 0.0638\n","----------\n","epoch 74/100\n","1/24, train_loss: 0.0491\n","2/24, train_loss: 0.0502\n","3/24, train_loss: 0.0625\n","4/24, train_loss: 0.0348\n","5/24, train_loss: 0.0914\n","6/24, train_loss: 0.0654\n","7/24, train_loss: 0.1520\n","8/24, train_loss: 0.0867\n","9/24, train_loss: 0.0585\n","10/24, train_loss: 0.0930\n","11/24, train_loss: 0.0352\n","12/24, train_loss: 0.1182\n","13/24, train_loss: 0.0313\n","14/24, train_loss: 0.0378\n","15/24, train_loss: 0.0403\n","16/24, train_loss: 0.0513\n","17/24, train_loss: 0.0293\n","18/24, train_loss: 0.0840\n","19/24, train_loss: 0.0807\n","20/24, train_loss: 0.0358\n","21/24, train_loss: 0.0298\n","22/24, train_loss: 0.0583\n","23/24, train_loss: 0.0837\n","24/24, train_loss: 0.0734\n","epoch 74 average loss: 0.0639\n","current epoch: 74 current mean dice: 0.3204\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 75/100\n","1/24, train_loss: 0.0532\n","2/24, train_loss: 0.0410\n","3/24, train_loss: 0.0735\n","4/24, train_loss: 0.0366\n","5/24, train_loss: 0.0849\n","6/24, train_loss: 0.0292\n","7/24, train_loss: 0.0312\n","8/24, train_loss: 0.0355\n","9/24, train_loss: 0.0948\n","10/24, train_loss: 0.0603\n","11/24, train_loss: 0.0904\n","12/24, train_loss: 0.0606\n","13/24, train_loss: 0.1138\n","14/24, train_loss: 0.0772\n","15/24, train_loss: 0.0726\n","16/24, train_loss: 0.0607\n","17/24, train_loss: 0.0879\n","18/24, train_loss: 0.0600\n","19/24, train_loss: 0.0535\n","20/24, train_loss: 0.0642\n","21/24, train_loss: 0.0372\n","22/24, train_loss: 0.0403\n","23/24, train_loss: 0.1546\n","24/24, train_loss: 0.0289\n","epoch 75 average loss: 0.0643\n","----------\n","epoch 76/100\n","1/24, train_loss: 0.0699\n","2/24, train_loss: 0.0955\n","3/24, train_loss: 0.0328\n","4/24, train_loss: 0.1408\n","5/24, train_loss: 0.0441\n","6/24, train_loss: 0.0595\n","7/24, train_loss: 0.0567\n","8/24, train_loss: 0.1151\n","9/24, train_loss: 0.0500\n","10/24, train_loss: 0.0341\n","11/24, train_loss: 0.0786\n","12/24, train_loss: 0.0904\n","13/24, train_loss: 0.0813\n","14/24, train_loss: 0.0490\n","15/24, train_loss: 0.0377\n","16/24, train_loss: 0.0394\n","17/24, train_loss: 0.0928\n","18/24, train_loss: 0.0604\n","19/24, train_loss: 0.0616\n","20/24, train_loss: 0.0372\n","21/24, train_loss: 0.0732\n","22/24, train_loss: 0.0371\n","23/24, train_loss: 0.0733\n","24/24, train_loss: 0.0323\n","epoch 76 average loss: 0.0643\n","current epoch: 76 current mean dice: 0.3594\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 77/100\n","1/24, train_loss: 0.0818\n","2/24, train_loss: 0.0573\n","3/24, train_loss: 0.0344\n","4/24, train_loss: 0.0355\n","5/24, train_loss: 0.0881\n","6/24, train_loss: 0.0311\n","7/24, train_loss: 0.0488\n","8/24, train_loss: 0.0402\n","9/24, train_loss: 0.0753\n","10/24, train_loss: 0.0491\n","11/24, train_loss: 0.0368\n","12/24, train_loss: 0.0486\n","13/24, train_loss: 0.0385\n","14/24, train_loss: 0.0723\n","15/24, train_loss: 0.0288\n","16/24, train_loss: 0.0669\n","17/24, train_loss: 0.0787\n","18/24, train_loss: 0.1147\n","19/24, train_loss: 0.1405\n","20/24, train_loss: 0.0562\n","21/24, train_loss: 0.0804\n","22/24, train_loss: 0.0541\n","23/24, train_loss: 0.0274\n","24/24, train_loss: 0.0921\n","epoch 77 average loss: 0.0616\n","----------\n","epoch 78/100\n","1/24, train_loss: 0.0546\n","2/24, train_loss: 0.0674\n","3/24, train_loss: 0.0478\n","4/24, train_loss: 0.0518\n","5/24, train_loss: 0.0597\n","6/24, train_loss: 0.0273\n","7/24, train_loss: 0.0352\n","8/24, train_loss: 0.0480\n","9/24, train_loss: 0.0367\n","10/24, train_loss: 0.0764\n","11/24, train_loss: 0.0362\n","12/24, train_loss: 0.1409\n","13/24, train_loss: 0.0608\n","14/24, train_loss: 0.0350\n","15/24, train_loss: 0.0866\n","16/24, train_loss: 0.0738\n","17/24, train_loss: 0.0699\n","18/24, train_loss: 0.0283\n","19/24, train_loss: 0.0442\n","20/24, train_loss: 0.0350\n","21/24, train_loss: 0.0283\n","22/24, train_loss: 0.0843\n","23/24, train_loss: 0.1008\n","24/24, train_loss: 0.0755\n","epoch 78 average loss: 0.0585\n","current epoch: 78 current mean dice: 0.3529\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 79/100\n","1/24, train_loss: 0.0570\n","2/24, train_loss: 0.0348\n","3/24, train_loss: 0.0291\n","4/24, train_loss: 0.0723\n","5/24, train_loss: 0.1346\n","6/24, train_loss: 0.0936\n","7/24, train_loss: 0.0576\n","8/24, train_loss: 0.0673\n","9/24, train_loss: 0.0537\n","10/24, train_loss: 0.0350\n","11/24, train_loss: 0.0338\n","12/24, train_loss: 0.0808\n","13/24, train_loss: 0.0264\n","14/24, train_loss: 0.0327\n","15/24, train_loss: 0.0757\n","16/24, train_loss: 0.0616\n","17/24, train_loss: 0.0341\n","18/24, train_loss: 0.0459\n","19/24, train_loss: 0.0452\n","20/24, train_loss: 0.0819\n","21/24, train_loss: 0.0288\n","22/24, train_loss: 0.0684\n","23/24, train_loss: 0.0448\n","24/24, train_loss: 0.0734\n","epoch 79 average loss: 0.0570\n","----------\n","epoch 80/100\n","1/24, train_loss: 0.0632\n","2/24, train_loss: 0.0697\n","3/24, train_loss: 0.0809\n","4/24, train_loss: 0.0342\n","5/24, train_loss: 0.0336\n","6/24, train_loss: 0.0812\n","7/24, train_loss: 0.0682\n","8/24, train_loss: 0.0305\n","9/24, train_loss: 0.0334\n","10/24, train_loss: 0.0262\n","11/24, train_loss: 0.0800\n","12/24, train_loss: 0.0290\n","13/24, train_loss: 0.0448\n","14/24, train_loss: 0.0468\n","15/24, train_loss: 0.0564\n","16/24, train_loss: 0.0942\n","17/24, train_loss: 0.0514\n","18/24, train_loss: 0.0432\n","19/24, train_loss: 0.0341\n","20/24, train_loss: 0.0709\n","21/24, train_loss: 0.1257\n","22/24, train_loss: 0.0583\n","23/24, train_loss: 0.0279\n","24/24, train_loss: 0.0524\n","epoch 80 average loss: 0.0557\n","current epoch: 80 current mean dice: 0.3070\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 81/100\n","1/24, train_loss: 0.0253\n","2/24, train_loss: 0.0688\n","3/24, train_loss: 0.0431\n","4/24, train_loss: 0.0640\n","5/24, train_loss: 0.0717\n","6/24, train_loss: 0.0513\n","7/24, train_loss: 0.0460\n","8/24, train_loss: 0.0368\n","9/24, train_loss: 0.0373\n","10/24, train_loss: 0.0515\n","11/24, train_loss: 0.0277\n","12/24, train_loss: 0.0563\n","13/24, train_loss: 0.0285\n","14/24, train_loss: 0.0856\n","15/24, train_loss: 0.0329\n","16/24, train_loss: 0.0750\n","17/24, train_loss: 0.0585\n","18/24, train_loss: 0.1271\n","19/24, train_loss: 0.0310\n","20/24, train_loss: 0.0948\n","21/24, train_loss: 0.0654\n","22/24, train_loss: 0.0317\n","23/24, train_loss: 0.0448\n","24/24, train_loss: 0.0787\n","epoch 81 average loss: 0.0556\n","----------\n","epoch 82/100\n","1/24, train_loss: 0.0340\n","2/24, train_loss: 0.0438\n","3/24, train_loss: 0.0323\n","4/24, train_loss: 0.0321\n","5/24, train_loss: 0.0512\n","6/24, train_loss: 0.0614\n","7/24, train_loss: 0.0556\n","8/24, train_loss: 0.1225\n","9/24, train_loss: 0.0551\n","10/24, train_loss: 0.0360\n","11/24, train_loss: 0.0334\n","12/24, train_loss: 0.0505\n","13/24, train_loss: 0.0896\n","14/24, train_loss: 0.0651\n","15/24, train_loss: 0.0808\n","16/24, train_loss: 0.0466\n","17/24, train_loss: 0.0627\n","18/24, train_loss: 0.0804\n","19/24, train_loss: 0.0626\n","20/24, train_loss: 0.0329\n","21/24, train_loss: 0.0726\n","22/24, train_loss: 0.0252\n","23/24, train_loss: 0.0716\n","24/24, train_loss: 0.0296\n","epoch 82 average loss: 0.0553\n","current epoch: 82 current mean dice: 0.3348\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 83/100\n","1/24, train_loss: 0.0498\n","2/24, train_loss: 0.0637\n","3/24, train_loss: 0.0460\n","4/24, train_loss: 0.0326\n","5/24, train_loss: 0.0329\n","6/24, train_loss: 0.0683\n","7/24, train_loss: 0.0570\n","8/24, train_loss: 0.0693\n","9/24, train_loss: 0.0746\n","10/24, train_loss: 0.0615\n","11/24, train_loss: 0.0678\n","12/24, train_loss: 0.0315\n","13/24, train_loss: 0.0272\n","14/24, train_loss: 0.0452\n","15/24, train_loss: 0.1147\n","16/24, train_loss: 0.0322\n","17/24, train_loss: 0.0653\n","18/24, train_loss: 0.0514\n","19/24, train_loss: 0.0405\n","20/24, train_loss: 0.0295\n","21/24, train_loss: 0.0276\n","22/24, train_loss: 0.0337\n","23/24, train_loss: 0.0765\n","24/24, train_loss: 0.0910\n","epoch 83 average loss: 0.0537\n","----------\n","epoch 84/100\n","1/24, train_loss: 0.0321\n","2/24, train_loss: 0.0242\n","3/24, train_loss: 0.0276\n","4/24, train_loss: 0.0384\n","5/24, train_loss: 0.0832\n","6/24, train_loss: 0.0616\n","7/24, train_loss: 0.0500\n","8/24, train_loss: 0.0312\n","9/24, train_loss: 0.0765\n","10/24, train_loss: 0.0457\n","11/24, train_loss: 0.0299\n","12/24, train_loss: 0.0293\n","13/24, train_loss: 0.0636\n","14/24, train_loss: 0.0542\n","15/24, train_loss: 0.0244\n","16/24, train_loss: 0.0653\n","17/24, train_loss: 0.0446\n","18/24, train_loss: 0.0674\n","19/24, train_loss: 0.0490\n","20/24, train_loss: 0.0747\n","21/24, train_loss: 0.0704\n","22/24, train_loss: 0.0250\n","23/24, train_loss: 0.1163\n","24/24, train_loss: 0.0608\n","epoch 84 average loss: 0.0519\n","current epoch: 84 current mean dice: 0.3451\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 85/100\n","1/24, train_loss: 0.0808\n","2/24, train_loss: 0.0275\n","3/24, train_loss: 0.0343\n","4/24, train_loss: 0.0541\n","5/24, train_loss: 0.0696\n","6/24, train_loss: 0.0288\n","7/24, train_loss: 0.0426\n","8/24, train_loss: 0.0541\n","9/24, train_loss: 0.0280\n","10/24, train_loss: 0.0537\n","11/24, train_loss: 0.0892\n","12/24, train_loss: 0.0672\n","13/24, train_loss: 0.0727\n","14/24, train_loss: 0.0681\n","15/24, train_loss: 0.0628\n","16/24, train_loss: 0.0633\n","17/24, train_loss: 0.1123\n","18/24, train_loss: 0.0304\n","19/24, train_loss: 0.0282\n","20/24, train_loss: 0.0288\n","21/24, train_loss: 0.0453\n","22/24, train_loss: 0.0485\n","23/24, train_loss: 0.0234\n","24/24, train_loss: 0.0396\n","epoch 85 average loss: 0.0522\n","----------\n","epoch 86/100\n","1/24, train_loss: 0.0370\n","2/24, train_loss: 0.0794\n","3/24, train_loss: 0.0433\n","4/24, train_loss: 0.1079\n","5/24, train_loss: 0.0568\n","6/24, train_loss: 0.0258\n","7/24, train_loss: 0.0315\n","8/24, train_loss: 0.0265\n","9/24, train_loss: 0.0322\n","10/24, train_loss: 0.0442\n","11/24, train_loss: 0.0498\n","12/24, train_loss: 0.0348\n","13/24, train_loss: 0.0683\n","14/24, train_loss: 0.0748\n","15/24, train_loss: 0.0280\n","16/24, train_loss: 0.0238\n","17/24, train_loss: 0.0510\n","18/24, train_loss: 0.0486\n","19/24, train_loss: 0.0743\n","20/24, train_loss: 0.0654\n","21/24, train_loss: 0.0610\n","22/24, train_loss: 0.0884\n","23/24, train_loss: 0.0278\n","24/24, train_loss: 0.0682\n","epoch 86 average loss: 0.0520\n","current epoch: 86 current mean dice: 0.3226\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 87/100\n","1/24, train_loss: 0.0799\n","2/24, train_loss: 0.0594\n","3/24, train_loss: 0.0256\n","4/24, train_loss: 0.0435\n","5/24, train_loss: 0.0827\n","6/24, train_loss: 0.0586\n","7/24, train_loss: 0.0293\n","8/24, train_loss: 0.0508\n","9/24, train_loss: 0.0432\n","10/24, train_loss: 0.0285\n","11/24, train_loss: 0.0512\n","12/24, train_loss: 0.0547\n","13/24, train_loss: 0.0292\n","14/24, train_loss: 0.0703\n","15/24, train_loss: 0.0480\n","16/24, train_loss: 0.0669\n","17/24, train_loss: 0.0276\n","18/24, train_loss: 0.0299\n","19/24, train_loss: 0.0631\n","20/24, train_loss: 0.1063\n","21/24, train_loss: 0.0641\n","22/24, train_loss: 0.0287\n","23/24, train_loss: 0.0505\n","24/24, train_loss: 0.0290\n","epoch 87 average loss: 0.0509\n","----------\n","epoch 88/100\n","1/24, train_loss: 0.0493\n","2/24, train_loss: 0.0708\n","3/24, train_loss: 0.0224\n","4/24, train_loss: 0.0275\n","5/24, train_loss: 0.0298\n","6/24, train_loss: 0.0503\n","7/24, train_loss: 0.0403\n","8/24, train_loss: 0.1093\n","9/24, train_loss: 0.0636\n","10/24, train_loss: 0.0615\n","11/24, train_loss: 0.0649\n","12/24, train_loss: 0.0242\n","13/24, train_loss: 0.1016\n","14/24, train_loss: 0.0242\n","15/24, train_loss: 0.0731\n","16/24, train_loss: 0.0333\n","17/24, train_loss: 0.0643\n","18/24, train_loss: 0.0408\n","19/24, train_loss: 0.0260\n","20/24, train_loss: 0.0461\n","21/24, train_loss: 0.0592\n","22/24, train_loss: 0.0343\n","23/24, train_loss: 0.0454\n","24/24, train_loss: 0.0373\n","epoch 88 average loss: 0.0500\n","current epoch: 88 current mean dice: 0.3252\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 89/100\n","1/24, train_loss: 0.0325\n","2/24, train_loss: 0.0546\n","3/24, train_loss: 0.0586\n","4/24, train_loss: 0.0845\n","5/24, train_loss: 0.0633\n","6/24, train_loss: 0.0403\n","7/24, train_loss: 0.0476\n","8/24, train_loss: 0.0364\n","9/24, train_loss: 0.0300\n","10/24, train_loss: 0.0299\n","11/24, train_loss: 0.0446\n","12/24, train_loss: 0.0228\n","13/24, train_loss: 0.0693\n","14/24, train_loss: 0.0659\n","15/24, train_loss: 0.1004\n","16/24, train_loss: 0.0593\n","17/24, train_loss: 0.0429\n","18/24, train_loss: 0.0493\n","19/24, train_loss: 0.0300\n","20/24, train_loss: 0.0363\n","21/24, train_loss: 0.0490\n","22/24, train_loss: 0.0240\n","23/24, train_loss: 0.0763\n","24/24, train_loss: 0.0283\n","epoch 89 average loss: 0.0490\n","----------\n","epoch 90/100\n","1/24, train_loss: 0.0650\n","2/24, train_loss: 0.0695\n","3/24, train_loss: 0.0462\n","4/24, train_loss: 0.0433\n","5/24, train_loss: 0.0259\n","6/24, train_loss: 0.0275\n","7/24, train_loss: 0.0223\n","8/24, train_loss: 0.0454\n","9/24, train_loss: 0.0301\n","10/24, train_loss: 0.0272\n","11/24, train_loss: 0.0601\n","12/24, train_loss: 0.1072\n","13/24, train_loss: 0.0792\n","14/24, train_loss: 0.0482\n","15/24, train_loss: 0.0560\n","16/24, train_loss: 0.0275\n","17/24, train_loss: 0.0419\n","18/24, train_loss: 0.0659\n","19/24, train_loss: 0.0446\n","20/24, train_loss: 0.0314\n","21/24, train_loss: 0.0616\n","22/24, train_loss: 0.0472\n","23/24, train_loss: 0.0246\n","24/24, train_loss: 0.0592\n","epoch 90 average loss: 0.0482\n","current epoch: 90 current mean dice: 0.3267\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 91/100\n","1/24, train_loss: 0.0521\n","2/24, train_loss: 0.0234\n","3/24, train_loss: 0.0577\n","4/24, train_loss: 0.1021\n","5/24, train_loss: 0.0710\n","6/24, train_loss: 0.0452\n","7/24, train_loss: 0.0760\n","8/24, train_loss: 0.0803\n","9/24, train_loss: 0.0303\n","10/24, train_loss: 0.0276\n","11/24, train_loss: 0.0442\n","12/24, train_loss: 0.0589\n","13/24, train_loss: 0.0217\n","14/24, train_loss: 0.0585\n","15/24, train_loss: 0.0378\n","16/24, train_loss: 0.0402\n","17/24, train_loss: 0.0462\n","18/24, train_loss: 0.0214\n","19/24, train_loss: 0.0368\n","20/24, train_loss: 0.0429\n","21/24, train_loss: 0.0621\n","22/24, train_loss: 0.0261\n","23/24, train_loss: 0.0258\n","24/24, train_loss: 0.0253\n","epoch 91 average loss: 0.0464\n","----------\n","epoch 92/100\n","1/24, train_loss: 0.0363\n","2/24, train_loss: 0.0568\n","3/24, train_loss: 0.0225\n","4/24, train_loss: 0.0234\n","5/24, train_loss: 0.0228\n","6/24, train_loss: 0.0202\n","7/24, train_loss: 0.0281\n","8/24, train_loss: 0.0740\n","9/24, train_loss: 0.0441\n","10/24, train_loss: 0.0429\n","11/24, train_loss: 0.0562\n","12/24, train_loss: 0.0486\n","13/24, train_loss: 0.0434\n","14/24, train_loss: 0.0579\n","15/24, train_loss: 0.0388\n","16/24, train_loss: 0.0557\n","17/24, train_loss: 0.0712\n","18/24, train_loss: 0.0654\n","19/24, train_loss: 0.0509\n","20/24, train_loss: 0.0329\n","21/24, train_loss: 0.0231\n","22/24, train_loss: 0.0954\n","23/24, train_loss: 0.0289\n","24/24, train_loss: 0.0219\n","epoch 92 average loss: 0.0442\n","current epoch: 92 current mean dice: 0.3347\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 93/100\n","1/24, train_loss: 0.0748\n","2/24, train_loss: 0.0687\n","3/24, train_loss: 0.0628\n","4/24, train_loss: 0.0252\n","5/24, train_loss: 0.0414\n","6/24, train_loss: 0.0212\n","7/24, train_loss: 0.0268\n","8/24, train_loss: 0.0316\n","9/24, train_loss: 0.0375\n","10/24, train_loss: 0.0204\n","11/24, train_loss: 0.0540\n","12/24, train_loss: 0.0221\n","13/24, train_loss: 0.0416\n","14/24, train_loss: 0.0424\n","15/24, train_loss: 0.0260\n","16/24, train_loss: 0.0904\n","17/24, train_loss: 0.0258\n","18/24, train_loss: 0.0688\n","19/24, train_loss: 0.0554\n","20/24, train_loss: 0.0463\n","21/24, train_loss: 0.0200\n","22/24, train_loss: 0.0487\n","23/24, train_loss: 0.0378\n","24/24, train_loss: 0.0534\n","epoch 93 average loss: 0.0435\n","----------\n","epoch 94/100\n","1/24, train_loss: 0.0414\n","2/24, train_loss: 0.0584\n","3/24, train_loss: 0.0707\n","4/24, train_loss: 0.0362\n","5/24, train_loss: 0.0436\n","6/24, train_loss: 0.0272\n","7/24, train_loss: 0.0558\n","8/24, train_loss: 0.0199\n","9/24, train_loss: 0.0421\n","10/24, train_loss: 0.0251\n","11/24, train_loss: 0.0335\n","12/24, train_loss: 0.0523\n","13/24, train_loss: 0.0232\n","14/24, train_loss: 0.0373\n","15/24, train_loss: 0.0418\n","16/24, train_loss: 0.0599\n","17/24, train_loss: 0.0195\n","18/24, train_loss: 0.0202\n","19/24, train_loss: 0.0661\n","20/24, train_loss: 0.0934\n","21/24, train_loss: 0.0211\n","22/24, train_loss: 0.0502\n","23/24, train_loss: 0.0249\n","24/24, train_loss: 0.0532\n","epoch 94 average loss: 0.0424\n","current epoch: 94 current mean dice: 0.3275\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 95/100\n","1/24, train_loss: 0.0482\n","2/24, train_loss: 0.0602\n","3/24, train_loss: 0.0200\n","4/24, train_loss: 0.0422\n","5/24, train_loss: 0.0185\n","6/24, train_loss: 0.0262\n","7/24, train_loss: 0.0643\n","8/24, train_loss: 0.0246\n","9/24, train_loss: 0.0511\n","10/24, train_loss: 0.0195\n","11/24, train_loss: 0.0440\n","12/24, train_loss: 0.0230\n","13/24, train_loss: 0.0413\n","14/24, train_loss: 0.0896\n","15/24, train_loss: 0.0420\n","16/24, train_loss: 0.0352\n","17/24, train_loss: 0.0685\n","18/24, train_loss: 0.0184\n","19/24, train_loss: 0.0525\n","20/24, train_loss: 0.0381\n","21/24, train_loss: 0.0252\n","22/24, train_loss: 0.0341\n","23/24, train_loss: 0.0524\n","24/24, train_loss: 0.0566\n","epoch 95 average loss: 0.0415\n","----------\n","epoch 96/100\n","1/24, train_loss: 0.0398\n","2/24, train_loss: 0.0634\n","3/24, train_loss: 0.0901\n","4/24, train_loss: 0.0498\n","5/24, train_loss: 0.0405\n","6/24, train_loss: 0.0362\n","7/24, train_loss: 0.0233\n","8/24, train_loss: 0.0493\n","9/24, train_loss: 0.0514\n","10/24, train_loss: 0.0411\n","11/24, train_loss: 0.0186\n","12/24, train_loss: 0.0185\n","13/24, train_loss: 0.0725\n","14/24, train_loss: 0.0245\n","15/24, train_loss: 0.0557\n","16/24, train_loss: 0.0240\n","17/24, train_loss: 0.0580\n","18/24, train_loss: 0.0187\n","19/24, train_loss: 0.0265\n","20/24, train_loss: 0.0326\n","21/24, train_loss: 0.0191\n","22/24, train_loss: 0.0476\n","23/24, train_loss: 0.0341\n","24/24, train_loss: 0.0462\n","epoch 96 average loss: 0.0409\n","current epoch: 96 current mean dice: 0.3083\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 97/100\n","1/24, train_loss: 0.0176\n","2/24, train_loss: 0.0688\n","3/24, train_loss: 0.0231\n","4/24, train_loss: 0.0888\n","5/24, train_loss: 0.0546\n","6/24, train_loss: 0.0387\n","7/24, train_loss: 0.0245\n","8/24, train_loss: 0.0572\n","9/24, train_loss: 0.0258\n","10/24, train_loss: 0.0237\n","11/24, train_loss: 0.0191\n","12/24, train_loss: 0.0478\n","13/24, train_loss: 0.0383\n","14/24, train_loss: 0.0460\n","15/24, train_loss: 0.0311\n","16/24, train_loss: 0.0397\n","17/24, train_loss: 0.0432\n","18/24, train_loss: 0.0518\n","19/24, train_loss: 0.0524\n","20/24, train_loss: 0.0681\n","21/24, train_loss: 0.0254\n","22/24, train_loss: 0.0336\n","23/24, train_loss: 0.0495\n","24/24, train_loss: 0.0194\n","epoch 97 average loss: 0.0412\n","----------\n","epoch 98/100\n","1/24, train_loss: 0.0448\n","2/24, train_loss: 0.0503\n","3/24, train_loss: 0.0564\n","4/24, train_loss: 0.0206\n","5/24, train_loss: 0.0439\n","6/24, train_loss: 0.0579\n","7/24, train_loss: 0.0191\n","8/24, train_loss: 0.0333\n","9/24, train_loss: 0.0213\n","10/24, train_loss: 0.0310\n","11/24, train_loss: 0.0626\n","12/24, train_loss: 0.0582\n","13/24, train_loss: 0.0256\n","14/24, train_loss: 0.0397\n","15/24, train_loss: 0.0243\n","16/24, train_loss: 0.0677\n","17/24, train_loss: 0.0444\n","18/24, train_loss: 0.0265\n","19/24, train_loss: 0.0445\n","20/24, train_loss: 0.0238\n","21/24, train_loss: 0.0234\n","22/24, train_loss: 0.0856\n","23/24, train_loss: 0.0373\n","24/24, train_loss: 0.0561\n","epoch 98 average loss: 0.0416\n","current epoch: 98 current mean dice: 0.3309\n","best mean dice: 0.3797 at epoch: 46\n","----------\n","epoch 99/100\n","1/24, train_loss: 0.0232\n","2/24, train_loss: 0.0472\n","3/24, train_loss: 0.0224\n","4/24, train_loss: 0.0523\n","5/24, train_loss: 0.0352\n","6/24, train_loss: 0.0216\n","7/24, train_loss: 0.0585\n","8/24, train_loss: 0.0357\n","9/24, train_loss: 0.0195\n","10/24, train_loss: 0.0612\n","11/24, train_loss: 0.0347\n","12/24, train_loss: 0.0565\n","13/24, train_loss: 0.0246\n","14/24, train_loss: 0.0397\n","15/24, train_loss: 0.0224\n","16/24, train_loss: 0.0430\n","17/24, train_loss: 0.0254\n","18/24, train_loss: 0.0819\n","19/24, train_loss: 0.0408\n","20/24, train_loss: 0.0419\n","21/24, train_loss: 0.0669\n","22/24, train_loss: 0.0574\n","23/24, train_loss: 0.0213\n","24/24, train_loss: 0.0533\n","epoch 99 average loss: 0.0411\n","----------\n","epoch 100/100\n","1/24, train_loss: 0.0329\n","2/24, train_loss: 0.0403\n","3/24, train_loss: 0.0178\n","4/24, train_loss: 0.0490\n","5/24, train_loss: 0.0187\n","6/24, train_loss: 0.0364\n","7/24, train_loss: 0.0631\n","8/24, train_loss: 0.0498\n","9/24, train_loss: 0.0215\n","10/24, train_loss: 0.0549\n","11/24, train_loss: 0.0220\n","12/24, train_loss: 0.0392\n","13/24, train_loss: 0.0472\n","14/24, train_loss: 0.0242\n","15/24, train_loss: 0.0305\n","16/24, train_loss: 0.0608\n","17/24, train_loss: 0.0194\n","18/24, train_loss: 0.0410\n","19/24, train_loss: 0.0531\n","20/24, train_loss: 0.0534\n","21/24, train_loss: 0.0242\n","22/24, train_loss: 0.0797\n","23/24, train_loss: 0.0371\n","24/24, train_loss: 0.0225\n","epoch 100 average loss: 0.0391\n","current epoch: 100 current mean dice: 0.3244\n","best mean dice: 0.3797 at epoch: 46\n"]}],"source":["max_epochs = 100\n","val_interval = 2\n","best_metric = -1\n","best_metric_epoch = -1\n","epoch_loss_values = []\n","metric_values = []\n","post_pred = Compose([AsDiscrete(argmax=True, to_onehot=2)])\n","post_label = Compose([AsDiscrete(to_onehot=2)])\n","\n","for epoch in range(max_epochs):\n","    print(\"-\" * 10)\n","    print(f\"epoch {epoch + 1}/{max_epochs}\")\n","    model.train()\n","    epoch_loss = 0\n","    step = 0\n","    for batch_data in train_loader:\n","        step += 1\n","        inputs, labels = (\n","            batch_data[\"image\"].to(device),\n","            batch_data[\"label\"].to(device),\n","        )\n","        optimizer.zero_grad()\n","        outputs = model(inputs)\n","        loss = loss_function(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        epoch_loss += loss.item()\n","        print(\n","            f\"{step}/{len(train_ds) // train_loader.batch_size}, \"\n","            f\"train_loss: {loss.item():.4f}\")\n","    epoch_loss /= step\n","    epoch_loss_values.append(epoch_loss)\n","    print(f\"epoch {epoch + 1} average loss: {epoch_loss:.4f}\")\n","\n","    if (epoch + 1) % val_interval == 0:\n","        model.eval()\n","        with torch.no_grad():\n","            for val_data in val_loader:\n","                val_inputs, val_labels = (\n","                    val_data[\"image\"].to(device),\n","                    val_data[\"label\"].to(device),\n","                )\n","                roi_size = (160, 160, 160)\n","                sw_batch_size = 4\n","                val_outputs = sliding_window_inference(\n","                    val_inputs, roi_size, sw_batch_size, model)\n","                val_outputs = [post_pred(i) for i in decollate_batch(val_outputs)]\n","                val_labels = [post_label(i) for i in decollate_batch(val_labels)]\n","                # compute metric for current iteration\n","                dice_metric(y_pred=val_outputs, y=val_labels)\n","\n","            # aggregate the final mean dice result\n","            metric = dice_metric.aggregate().item()\n","            # reset the status for next validation round\n","            dice_metric.reset()\n","\n","            metric_values.append(metric)\n","            if metric > best_metric:\n","                best_metric = metric\n","                best_metric_epoch = epoch + 1\n","                torch.save(model.state_dict(), os.path.join(\n","                    root_dir, \"best_metric_model.pth\"))\n","                print(\"saved new best metric model\")\n","            print(\n","                f\"current epoch: {epoch + 1} current mean dice: {metric:.4f}\"\n","                f\"\\nbest mean dice: {best_metric:.4f} \"\n","                f\"at epoch: {best_metric_epoch}\"\n","            )"]},{"cell_type":"code","execution_count":null,"metadata":{"tags":[],"id":"TpgIDCGTmUoF","executionInfo":{"status":"ok","timestamp":1673903637272,"user_tz":0,"elapsed":185,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"f6744598-cd4b-446d-f757-6134a1a05110","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["train completed, best_metric: 0.3797 at epoch: 46\n"]}],"source":["print(\n","    f\"train completed, best_metric: {best_metric:.4f} \"\n","    f\"at epoch: {best_metric_epoch}\")"]},{"cell_type":"markdown","metadata":{"id":"wKkTJBHvmUoF"},"source":["## Plot the loss and metric"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PSDG54C6mUoF","executionInfo":{"status":"ok","timestamp":1673903641590,"user_tz":0,"elapsed":674,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"3be18a03-247d-42e7-e770-7c9bea70af24","colab":{"base_uri":"https://localhost:8080/","height":404}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x432 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(\"train\", (12, 6))\n","plt.subplot(1, 2, 1)\n","plt.title(\"Epoch Average Loss\")\n","x = [i + 1 for i in range(len(epoch_loss_values))]\n","y = epoch_loss_values\n","plt.xlabel(\"epoch\")\n","plt.plot(x, y)\n","plt.subplot(1, 2, 2)\n","plt.title(\"Val Mean Dice\")\n","x = [val_interval * (i + 1) for i in range(len(metric_values))]\n","y = metric_values\n","plt.xlabel(\"epoch\")\n","plt.plot(x, y)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"CvlDyropmUoF"},"source":["## Check best model output with the input image and label"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ziNjnzDTmUoF","executionInfo":{"status":"ok","timestamp":1673903694237,"user_tz":0,"elapsed":5421,"user":{"displayName":"崔晋","userId":"00280143555364372270"}},"outputId":"1abb9949-7881-44d4-e79b-9641761e7247","colab":{"base_uri":"https://localhost:8080/","height":1000}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x432 with 3 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x432 with 3 Axes>"],"image/png":"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kmSqylStBOl1RRKgRBRFaLfb7mfS1ictcXIeHTak1S8MQ7cOaVZ4Oep7qG5YO29Fq0qujaGJiIiIiOh0LHx4KssSH//4x/Hiiy+6aXtPPvkklpaWXEDQ0+b0fkmyOe7du3fxwgsvuGNWK1OzHiXY6L2ljhNIdOVJBzoddk4C93YiIiIiIjpdCx+eJpMJNjc3p6bVra6uIgxDF0ZkH6fquG+ZUjccDtHr9QDs38PpoLChg5S0zM0TTI5btbofDE5ERERERKdn4cMTAFf9kYrRs88+i+eff979XCbw6XY9Y4xrlRsMBkjTdOqY9zN84X6eT0RERERE59OZCE/Vqs3GxsZDuhIiIiIiIrqoavd+ChERERERETE8ERERERERHQHDExERERER0REwPBERERERER0BwxMREREREdERMDwREREREREdAcMTERERERHRETA8ERERERERHcFc4ckY8x3GmI8aY/7IGPOvjTGRMeZJY8yHjDHPGWN+2hgTnNTFEhHRfrwXExE9XLwPXxzHDk/GmGsAvg3AW6y1nwGgDuBrAPwggB+21j4FYBPAN53EhRIR0X68FxMRPVy8D18s87bteQAaxhgPQAzgJoAvAvBzuz9/L4CvnPMcRER0ON6LiYgeLt6HL4hjhydr7asAfgjAS9j5B7IF4BkAPWttufu0VwBcm/ciiYhoNt6LiYgeLt6HL5Z52vaWAbwdwJMAHgXQBPCl9/H6dxljPmyM+fBxr4GI6KI7yXtxgeyUrpKI6Pziffhimadt74sBfNJae9daWwD4BQB/AUB3t2QJAI8BeHXWi621T1tr32Ktfcsc10BEdNGd2L3YR/hgrpiI6HzhffgCmSc8vQTgzxtjYmOMAfA2AH8M4DcB/PXd57wTwPvnu0QiIjoE78VERA8X78MXyDxrnj6EnUVw/xHAH+4e62kA7wbwncaY5wCsAvjxE7hOIiKagfdiIqKHi/fhi8VYax/2NcAY8/AvggDgGbZREl1cHbNiP8+87WFfxoX3G/bneC8muqB4H14Mh92H5x1VTkREREREdCEwPBERERERER0BwxMREREREdERMDwREREREREdAcMTERERERHRETA8ERERERERHQHDExERERER0REwPBERERERER0BwxMREREREdERMDwREREREREdAcMTERERERHRETA8ERERERERHQHDExER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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x432 with 3 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAx4AAAF1CAYAAABmljyOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeZRt6Vnf99+z9z5DVd26o26Pt6VukFpWi1jMCAQCSzIGYSzsAAGcoAiRxgnBBJwwreUAXiwMCwLGKzGkjQwiiEECYoFRJGMZBSuAopGA1BJqqbvVw+0713iGPb35o+rd9z27dlWdGs6tfe/9ftY6q06dYZ99b6+1+/zu8z7vY845AQAAAMAsRUd9AgAAAABufQQPAAAAADNH8AAAAAAwcwQPAAAAADNH8AAAAAAwcwQPAAAAADPXiuBhZh81s6866vMAAGwwsyfM7DVTvtaZ2Qv3+Tn7fi8A4ObSiuDhnHupc+49R30eOzGzrzOz95rZkpk9Z2a/bGaLR31eAHCrMrOfNbNPmtmqmX3czL79qM8JANrosP8RZ7fj7fd7cSuCx03ihKSfkHSPpJdIulfSzxzpGQHArW1d0tdr4/r7ekm/YGZfdrSnBADQPr8XtyJ4hCV9M/sxM3ubmf365r9y/aWZPWhmP2xmF83sKTP76uC9bzCzRzdf+2kz+67asX/AzM6b2bNm9p1hgjOz3ua/qH3GzC6Y2S+Z2VzTOTrnfsM5907n3MA5d03Sv5b0itn9rQBAO5jZF5vZn23+y9Z5M/tfzaxbe9lrN6/Bl83sZ8wsCt7/HZvX6Wtm9i4ze8E0n+uc+1Hn3Medc6Vz7n2S/pOkLz3EPxoAtIaZvcTM3rN5rf2omf294Ln3mNl3Br//12b23s37f7L58F+Y2ZqZ/Rdm9lVm9rSZ/cjmdfkJM/uH+z1e/Vz3+724FcGjwddL+j8knZL0YUnv0sa53ivpn0n634PXXpT0dyUdl/QGST9vZp8vSWb2NZK+X9JrJL1Q0lfVPuenJD0o6XM3n79X0v885Tm+UtJH9/bHAoCbUiHp+yQ9Txtf/F8t6b+rvebvS/pCSZ8v6XWSvkOSzOx1kn5E0j+QdFYb4eE393oCm/8o9EXiugvgFmRmHUl/IOnfS7pD0vdIeouZvXi39zrnXrl592XOuWPOud/e/P0ubVy379VG1fiRAx5vJ1N9L25r8PhPzrl3OedySW/Txv+sfso5l0n6LUn3m9lJSXLO/aFz7lNuw/+tjf9gX7F5nG+W9CvOuY865waSfsx/gJmZpIclfZ9z7qpzblXST0r6lt1Ozsz+tjb+A04bUgDgpuWc+6Bz7s+dc7lz7glt/OPPV9Ze9tOb19LPSPoXkr518/F/JOmfO+ce3bym/6Skz5226hH4JUl/oY1/iAKAW83LJR3Txvfd1Dn3HyX9O12/lu7XP3XOjTe/I/+hNr4bH6q9fC9ODvvDD8mF4P5Q0mXnXBH8Lm38x1kys6+V9KPaqFxEkuYl/eXma+6R9IHgWE8F989uvvaDGxlEkmSS4p1OzMxeLuk3JH2jc+6v9/BnAoCbkpk9KOnntFHRmNfG/zs+WHtZeH19UhvXX0l6gTZ6M/6X8JDa+Be4J6f8/J+R9DmS/pZzzu35DwAA7XePpKecc2Xw2JPauFbu1zXn3HrtePds9+L92Ov34rZWPKZiZj1JvyvpZyXd6Zw7Kekd2vifmiSdl3QueMt9wf3L2ggxL3XOndy8nXDOHdvh8z5P0u9L+g7n3LsP8Y8CAG32i5I+LulFzrnj2lg6ZbXXhNfX50t6dvP+U5K+K7jOnnTOzTnn/nSaDzazH5f0tZK+2jm3cqA/BQC017OS7gv747RxLX1m8/66Nv7hx7trimOeMrOF2vH8tXk/x5uwn+/FN3XwkNSV1JN0SVK+Wf346uD5t0p6w2azzrykf+qf2EyU/1obPSF3SJKZ3Wtmf6fpg8zscyS9U9L3OOf+YCZ/GgBop0VJK5LWzOxvSPpvG17zP5nZKTO7T9L3SvJrgn9J0g+b2UslycxOmNk3TfOhZvbDkr5N0mucc1cO+ocAgBZ7n6SBpB8ws45tzLf7em20GEjSRyT9AzOb39wk6Y2191+Q9FkNx/1xM+ua2Vdooyf6bQc8nqT9fy++qYPHZl/GP9ZGwLimjf9B/X7w/P8l6V9K+mNJj0n6882nxps/f9A/bmYrkv6DpO2abv6JNpZnvWmzw3/NzGhyBHA7+B+1cX1d1cY/2DQ1Gr5dG8uvPqKNdcRvkiTn3P8p6acl/dbmdfavtFHBmMZPauNf6B4Lrrs/cpA/CAC0kXMu1UbQ+FptrMr5V5K+3Tn38c2X/LykVBuB4M2S3lI7xI9JevPmjli+j+M5bXw/fnbz9f/ogMcL7et7sd1Oy2XN7CXa+J9eb7PJEQAAALilbFZMft05d263195IN3XFYxpm9vc353Wc0sa/uv0BoQMAAAC4sW754CHpu7Qx6+NT2tiLvmltMgAAAIAZuq2WWgEAAAA4GjOpeJjZ15jZJ8zsMTP7oVl8BgBgZ1yLAeBocR2edOgVDzOLJf21pL8t6WlJ75f0rc65jx3qBwEAtsW1GACOFtfhrWYxufyLJT3mnPu0JJnZb0l6naRt/5KPHz/uzp49K0maJgj51zjntn29n0ZuZhO38Lmdjt10Lk3v+9SnPnXZOXd215MGgBtrz9firvVcXwvbPd1aI60rdePtL+wAcDRum+uwJK3q2q7fiWcRPO7VxqRa72lJX1J/kZk9LOlhSTp79qx+7ud+biJI+PvhTZKKolBRFHLOqSgKZVkm55zKslSeb2xWFUWR/wwlSaIkSbbcj+O4ep3/PEkqy1JlWU485o/lg0f4vm/6pm968iB/WQAwI3u+Fvc1ry+xV9+YsztE75tuYC4A3Gi3zXVYkv6D+51dvxPPInhMxTn3iKRHJOnFL36xW1xcrAKEtBEAiqKogoC/77/8+zASRVH1Pv9YlmXV72G1I0kSxXG85X4URVuOG6pXTcLXA8DNLLwWH7fT7DYCADfY7XQdnkXweEbSfcHv5zYf25aZqdPpTASPoigkbVQX8jxXWZZVyKgvo/L8+4uiUJ7nWwJEGDY6nU51P6x+1Ksc/qcPG2Y2cQ4A0FJ7vhYDAA4V1+GaWQSP90t6kZk9oI2/3G+R9G07vcHM1O12JWkiePig4UOBr2JIkyGjLEtlWaY0TVUUhVZXV7WysqI8z5XnubIsk6QqYPiwEcexpI1wE0WR4jjWsWPH1O/3lSSJ+v2+er3ennpEAKAl9nwtBgAcKq7DNYcePJxzuZn995LeJSmW9G+ccx/d6T1RFGl+ft6/X5KqwFCWpdI0nVhO5b/4+8BRFIVGo5GGw6GyLNMzzzyjp556SuPxWGtra1pbW5v4LGlrtSSKIs3Nzen5z3++7rjjDs3NzenOO++sAoqvjhA6ANwM9nMtBgAcHq7DW82kx8M59w5J75j29b4C4ZVlqSRJquqHr1T40OFDiK94+KVVvuoxGAy0vLys0WhUVT+269sIf5+fn9fx48c1Pz9f9YqEy78IHQBuJnu9FgMADhfX4UlH1lwe8jtU+fuSqmVSfrcqfxuPxxoMBsrzXCsrK7p69aqyLNPS0pKuXLmiLMt06dKl6vHhcFhVTEL10OFduHBBaZpqcXFR/X5fnU5H3W5XSZKo0+lI0kRIAgAAALC71gQPvxWury74CkZRFErTVOPxWEVRaDAYaHV1VWma6sKFC3rqqac0HA51/vz5anmVf29YGZnGaDTSYDDQZz7zGZ0+fVoLCwvq9Xqan5/X/Px84y5YAAAAAHbXiuAhaWIbXf/TN46HP32oGI/HGo1GWl9f12Aw0MrKiq5du6Y0TQ90Dj4AdbtdDQYDjUajiWVf0tZlWgCArSxJpM1/sNkL55xclktlMaMzAwAchVYEj7IsNRwOq3DhKyC+yuGXTBVFobW1Na2urmo8HuvKlSs6f/681tfXtby8PLEFb7j9rf+fXp7n1Wt2Mx6P9dRTT2k0Gul5z3uejh07pmPHjm3Z0hcAsJX1esq/9KW69Hl95f29vbe7LN35Z8tyH/mY5G7pLe0B4LbSiuDht8D1FQ2/W9V4PJ64XxSFlpeXtbS0pNFopAsXLuiJJ57Q+vp61WQubfRgdDqdiW1znXMajUZTB4/hcKjHHntMTzzxhM6dO6dz587pjjvuUBRF1fRzAECzqNfTs1/e13d+yzv1UH9v29b/7pUv1IfHf1Nn/iKSHFUPALhVtCJ4SNerEb6vI9xON8uy6nn/mvpNur4EKo7jKhz4+34A4bTKstRoNJIkra+vazQaKc/zqpKyl2MBwO3COl1Zvyc7dULj06Vec+xj+pvdvZU8nss/qffPv0wWmdx0LXoAgJtAK4JHnudaWlqqGsnDLXJ9c7ifRF4UhZIkUbfb1bFjx3TmzJlq+1uv3++r3+9X1YkkSZTnuS5evKjRaDR1s7mXpqkuXryoxx9/XL1eTydPnlS/v8e1AwBwi7NOV/mXf47Ov7yv9KTTSz7/CZ2N8qM+LQBAS7QieBRFoatXr070dTQNDJQ2KhF+KdWxY8d0xx13aDweT8zbWFhY0Pz8fBU6Op2OsizTaDTSlStX9nx+4/FYzzzzjMqy1LFjx3Tu3DmdOHHi0P78AHArsG5Hz31xX//Nf/kOfcX8X+vOONUd8fxRnxYAoCVaETx8M7m/hcFDmtxFygeRKIrU6XSqyoavjPgJ5P1+vwoo4bKr/fCT0dfX1xXHcbUcDAAgRf2+bGFetnhM6Smnl899Sl/Q60rq7ut4HSuUz0vx2efJjcYqBwO58fhwTxoAcMO1JnikaVrtXuWXVXl+yZTX6XQUx7FOnjypKIqqLXD9ezqdTjXszweW0WhUNZzvVZqmunTpkgaDgZ73vOdVu1wBwO3OkkTpl71Uz76yp/HpQp/zssd1TzKUtP9r5H/We0Yn/9Zz+vhd96t/MdK5d69K/+9fHt5JAwCORCuCR1mW1ZDAwWBQNYtLk6HDN3b7napOnjy5ZcmTc64KIGElxTeZ74cfVhhFkdI01QMPPKBTp07t808LALcOSxJd+ryevuub3qHXHvuoTkfSqehgy6te0unobQ/9mlZfYvpXl79Sf3r+i3Tq/cbWugBwk2tF8PBLp5omgvs+D38Ld5Sqz+mov6csy+q5JEmqpvOwgX0avqk9bHiXxM5WAG57zjlZKQ2KngZlonnLdn/TLjoW6+7kmO6WdH//st7bOfh5AgCOXiuCRxzHOnHihMbjscxMaZpO7GTV9AU/rHxsF1zCike/39fzn//8apvc8+fP6/LlyxNLuqZhZup0Our1egf+cwPAzc5lue740FBv6b9av3LqVbr/C57WIy/8TT3QYTkqAGBSq4KHn14+Ho+V5/mWrW/DkODDRpIkE9vm1mds+CpFnue699571ev1tLa2Vk0+32vwiKKoaloHgNteWSj+04/q+R/qKTq+qE9+9wv07APzeoBLJACgphXBw1cvfFO4X1IVLmvyAcEHi7DK4W9+1yr/u1+e5X/vdDrqdrvqdruNS7T2es4AAMllqVyWSmWp3jXTH689pMz9te5LVvT8ZE4d29uOgmOX6bEs13PFMX1g+X4lQ3o7AOBW0IrgEUWRjh8/rizL1Ol0lOe50jTVYDCoKhZ++VUYMHyI8BUPv2tVGCp8SDEz9Xo9zc3NVUMI98sv8QIAXOfGY931ZwO9LX+Vfv3kq3TvK57Wmx/8DZ1L9rbs6i9S6Q0f+k65D51Q/6rTnX+5pJLGcgC46bUieMRxrIWFBeV5rm63q6IoNB6P1e12q6GC6+vr1e5UPkz4CsZ2wcNXPHzVxPdmpGm67+CxXUM7ANzuXJ4r/vO/0j0fSBSdOqlPLNyvqy9MdG6Px/n4+G4l7z2he9/0VyrHY5UZ088B4FbQiuARboEbLqGK41jOuWorXP+FP9xWN1xq5cNAuBNWlmXVjJD19XWtrKxobW1NaZru6RzD5V3+nAEAk1yey+W5bH2g3pVIv7v8BfpY/9nq+X6U6aHuBX12MqfYmncGLBXJcm0MDswJHQBwq2hF8JA0MTTQ92P0er0qXEgbjeJhpcH3hIRhxDmn8Xis0WikPM+1trZWNZN/+tOf1hNPPKE0TXX58uWJxvWdxHGsXq9XVVj8+QIAmpXDke79k4H+YOmV+re969ft7Jj0Wa95XG954e/phM0d4RkCAG60VgQPv+2tdH02hm8298HDz9IIhZWQUJqmWl9fV5ZlWlpa0tLSkkajkZ544gl94hOf2DIZfTdmpm63q16vV22jS/AAgO25LJX96V/ojvdN9sPF992rjz7/nAafVegEo5AA4LbSiuAhXV+6VN/FyvPho/5YvZ/Dh5jxeKw0TTUajaqb3yVrr8ukfA+Kvx2kMR0AbhvObV0qNRypezHR/3b1S3VnZ6Xxbe+69JB6y06uZEkrANxKWvEN2vdiSNebt8OA4JvH/U5SYT+Ir3b4JvKiKLS2tqaLFy8qTdOq4jEejzUYDPbVmzE3N6f7779fd999t+bn57W4uEhzOQDsQ7m0rOe/c6h3ffrL5bbZHLCz5nTmI5dVuOmWwwIAbg6tCR55njfuSOVnetRDh6QtPRo+eIxGI62srGg8Hmt5eVnLy8vKskzj8Xhf59ftdnX27Fndd999SpJE/X6f4AEA+1CORore+xGd/n92voYWbOABALecVgQPafuBfP7x+vN+MKB0PYD4JvNer6fFxcWqETyOY6VpWk1Ery+3CnfVavr8xcXFqrncz/AIp6MDAPaIYAEAt53WBI/6F/l60PBb60qa+OmHCoaPnzp1amIeiO/3uPPOO3XhwgUVRaGyLLfc/DF8lcWfw8mTJ3X69GnNz88rjmN1u10GCAIAAAB70IrgUe/VCB/3ISD8vf7e+gyQhYUF9Xq9aiesPM+rHpI4jqvH/C5ZeZ5Xu1TVg0cURTp27JgWFhaqikfYbwIAAABgd60IHtJkxSOsaDQtsfI/6yGlfj8MEH7JVJqmKsuyWnLl+0J8CPHLsMJBhnNzc5qbm6umpPsAAgAAAGA6rQgefk5G2Cy+Xc9Fvbk8bEL37w+XTvllVc45JUmiU6dOVc3s/vHwfnh8HzySJNH8/Ly63a7MTEmS0OMBAAAA7EFrgof/kh+Gj6bJ4vXKRtibES7J8sHAz/9wzimOY83Pz1dLsIqimLjvjxMeP47jibARPgYAAABgOq0IHqGwkrDdcqZwuVUYGMKekHqAaeoP8cKgEh4rHFDod7IKfwcAAAAwnVYFj7CaUA8DTc3nfklVODxQmlxeFTauh/NBoiiaCA9NTeuer8aE50XFAwAAAJhe64JH+OV+uyVN9cnl4TKrcIvd+qwOv5SrHmx2a1IPz6seiAAAAADsrhXBwzd4h8uZpK1VB+n6sin/fNP9KIqq6ocXPuc/c1pN50PFAwAAAJheq4KHpC1VjnDplaQtDej+/fXm8u3ue/XgUO8BqQ8r3O59AAAAAHbXiuAhTfZr+C/7YV9FPTTsJRDUl2P5x7ab/RE2qgMAAAA4uNYEjzAE1Ody1Ceb++fCGR71kLBT9WK7kFJ/T/244fsJJQAAAMD0WhM8PN/DEQ4BlCa32Q1nd4RBpF4xqYeHpp2x6o81vb9+HwAAAMDetCZ4NFU8Qn6nqqbQ0fTanaog9c/aaecsggcAAABwcK0JHuGsDM9XMvxj21U0/P0m24WT7fpG6lWUps+iwRwAAADYm1YEDz8bI2wml7ZunSs192E0/V4PEE2vbwoQYbip95GE7yN8AAAAANNrRfBoUt8it6miMc3Sp+36PXb73HAi+rTnAwAAAKBZK4KHc05FUUxMHffVD/9lv6nKsNvv4fGbGs2bms7DsBE2uPsgst25AAAAANhea4JHnudV4PDhwy/BMjPFcTzxxb+u/thellptV00Jd8oK+z3qvSgAAAAAdhbt/pIbY7vZHNMukdrpuPXPaLKXaslBzwkAAAC43bSi4iFJRVFU8zskTVQ+fLUjrH5IW5vJw+pE0w5YvoIiTTaIN00wry+posIBAAAA7F8rgkdTM3ccx9WuVkmycZo+hPhAUF9OVRSFJDVWTrx6sKg/5pxTHMdVEIqiqPE4VDsAAACA6bUieEjNPRr+y7+ZqSiKKpTUg4d/fdPPvdjtvVQ9AAAAgP1pRfCI41gLCwsqikJpmqosS+V5Xt0PKx1JkqjX622Z+VHfjcrzS6v8a8L7TRUMXzVp2gULAAAAwP60InhEUaT5+XllWVbtcJXnuUajkfI8nwgI3W5X8/PzVQjxgURqDgdhX0cYJMJdquq7Xu007dy/DgAAAMD09r2rlZndZ2Z/bGYfM7OPmtn3bj5+2sz+yMw+ufnz1DTHi+NYcRxXW+rWt6z1PRz+5067YG2eR2MPR9P9Kf+8U78WAG6Uw74WAwD2huvw9A6ynW4u6Z845x6S9HJJ321mD0n6IUnvds69SNK7N3/f+SSiSP1+X/1+X3Nzc5qbm1Ov11O321Wn06l2uyqKQnmeK8sypWmqPM+rMFJfEuWDhQ8xPtTEcVxVSvz9JEkmXlMPP4QOAC12aNdiAMC+cB2e0r6XWjnnzks6v3l/1cwelXSvpNdJ+qrNl71Z0nsk/eBOxzIz9fv9atvcPM9VlqU6nU5VxfD9HkVRKMuyiQGDkqotdv3xwp9euOQqnFzuXxsuvfJhx+9qVV9mxXIrAG1wmNdiAMDecR2e3qH0eJjZ/ZI+T9L7JN25+R9Akp6TdOc273lY0sOSdPfdd4ePV9WHMHh0u12VZakkSdTtdhVFkTqdjjqdzpYQ4o9Tv1//GVZJfNWkXuGoL+OqBxYAaIuDXov7mp/9SQLALYzr8M4OHDzM7Jik35X0PzjnVmpf2p2ZNX5Ld849IukRSXrooYec79vwzeJzc3OKomhLX0cURUqSZMuAv/ocD38/fF19DkhTwPDDB/3OWv7z0zStzoHgAaBtDuNafNxOc3EDgH3iOry7AwUPM+to4y/4Lc6539t8+IKZ3e2cO29md0u6uNtx/MyOcDq5DxjS9SVSYYCQVIUDSVXfR7hUK6xg2ObEc98z4vs56uHDB42yLDUej1UUxcQMkXAqOgC0wWFdiwEA+8N1eDoH2dXKJL1J0qPOuZ8Lnvp9Sa/fvP96SW/f7Vi+hyPLsuoLfhRF6na7VZO5bz7v9/vq9XrVT/+8bxgPl1v5YwfnvKXp3IeQsNE8vIW7bYXvp+kcQBsc5rUYALB3XIend5CKxysk/VeS/tLMPrL52I9I+ilJbzWzN0p6UtI373agPM915cqVakaH791YWFioAkDYy+H7LHyVoygKDQaDqmLhBxH6CkrYy+GXWnU6nWrJVlj58BWNoigURVE1UySseFDtANAih3YtBgDsC9fhKR1kV6v3Strun/xfvZdjlWWp1dXVahtdX2WYm5urttSdm5ub2LlKksbjsYbDYbUUajQaNQ4MDJdchdvr1pddhXNBfI+IDyVJkqgoiuoYhA8AbXCY12IAwN5xHZ5eKyaX53muq1evanFxUQsLC9VuVpImwkK4jKq+A1UYMsIG8ZB/Lry/2y5W9aVa4U8AAAAA02lF8BgMBvrQhz6ke+65p1pq1e/3Jwb++VsYBrIsa5xunud5Nfcj7NHIsqz63b/Xb6XrZ4iE4aVpFyvCBwAAALB3rQge4/FYn/nMZxRFkR588MFq6VTT5HFJEztWeWGVo74TlaSJSoi0MXDQL50KhcGjXvUgbAAAAAD704rg0el0dObMGZ04cUJxHE9MKPd9Hb5SEYaB8Xis8XhcVTj8zli+ITysVPhtdtM0rY4T9myEfSHSRpDJsqwKMVmWVbtu+aoKAAAAgOm0InjMzc3pZS97mRYXF9Xr9ZTnucbjsVZXV5WmqTqdjkajUbXUyjd+D4dDra+vK89zraysaGVlRXmeazgcajweVwMJ/U5WPkzUw8ZOVQ9/8yEkHCYIAAAAYDqtCB6dTkd33XWXer2ekiSpqgppmkrSxJDAcIDfcDjUcDhUnucajUYT1Q9f8Qh3tZI09bKppn6PsBJD8AAAAACm14rgYWZV6JBUzegYDofVcqs0Tastb32fxmg00mg0UlEUGo1GE1WJcMlUfdK5nwPihX0c4X1/HP8+Hzz8RHMAAAAA02lF8IjjWIuLixNf+H2okNS43a2kqrohqerxCJdi1d/jnwuXUfnHwpBRr3RIqkKNX8qVZdnM/14AAACAW0Urgocf0BeGAP8l33/xr1clJFWN3+HE8qbBfn6pVTh9PNwu139OPZCEr/MN60VRaH19vQo8AAAAAHbXiuDhv/yHFQn/ZT9s8K7P06gPGWwSVkv8e/zk8aaZHOHn+aDhl1flea4sy6qmdwAAAADTaUXwKMtSw+FQkrYsoworDvVp5UmSTGy32+l0thy73rPhqx4+rIS/+8Djm9jH43G1Pe9gMFCaphqPx1paWqrOFwAAAMDuWhE8JE0sqZKuTyFvCh7h9rj+vt8et75bVT1s1J8PH6v3d/jlVb5/ZDweazQaVbtpAQAAAJhOK4KHr3g0hYpwcrlfJuUDRjijox4qwn4QX81oah6vBxu/vCoMHX5rXz9EMOw9AQAAALC7VgSPoii0urqqOI7V6/UmwoYPFOGwv/rj9SpGuEuVDxiSJna8CsNGuA2vX2rlhxj6wOF32cqyrFqCBQAAAGA6rQge/su/tNHb4Xs1wiVUTWEjvG03l6P+OeHzYSgJm8rDHa/qze0+rPj3AQAAANhdK4KHdH1nqXB3Kh86wuVV2y2rqs/q8NPO/a5UvmfDN477qoafGRLe95PP69PQ/VIrejwAAACAvWlF8Kg3h9fDRdNzXr16UZ/LEYYNv3TKL6fyu2aFj4cT0IfDYRVC/GtGo5FWV1e1vr5+VH9dAAAAwE2nFcGjSVMFpN7LUR8q2PT7dkuo6pUQf/OVkGluAAAAAKbTmuDhZ3KEW9v6kODnbdQH/jXN6KiHinBJlX8sXHblhwP6JVWDwUCj0UhFUWhtba2qeAwGg6qpfDwes6sVAAAAsAetCB5mpiRJJnaoCgNEuLyqaZmVNDmvw7/PN62Hu1eF2+T63+f39KsAACAASURBVIfDoQaDgYqi0MrKiobDobIs09raWrX0anV1VePxeGK6OgAAAIDptCJ4eE1LqcL7O+1eVQ8e4Xa69fkdnn8srJT4SogfGhg2lbOFLgAAALA/rQkeYSVhuwrHTj0e21U8wmVX9SpFFEUTfR5pmmptbU2rq6sTy6v8MQAAAADsTyuChw8I9WCxHd9wHs7SCHs86k3kTdUOSVXA8b0gPngsLS1V2+lmWbbtXBAAAAAA02lF8JA0UbmoB5D672Hg2G4oYBhC6suu6p8bhhVf/QgrJQAAAAAOphXBwzmn0WikKIqUJEnjvI6d3lsPGE1LraTJ3o8waKRpquFwqNFoVA0NDJduAQAAADiYVgQPPzE8jmOVZVntbhXuchWqVzn8McJp5X4nq3rYCIcM+vDhBwP60OF3rwIAAABwOFoRPJxzStO02lJX2rq8qv56abKJvF7xaBog2LTLVdNzhA4AAADgcLUieGRZpvPnz6vf7+vkyZPqdruNS63qjeNra2taWVmZGAwoSd1utwox/hYeQ7oeWtI0re4znwMAAACYjdYEjwsXLmhxcVGdTqfxy7+vRBRFUU0cv3Llip599tlq5ym/TGthYUGLi4uK41jdbrcKMpKqWSDhkquwQkLwAAAAAA5fK4JHWZYaDoeK41jr6+uNX/7DGR1ZlqksSw0GA41GI6VpOhEs+v1+tTuWr4TU54LUl1sROgAAAIDZaUXwSNNUTz75pPr9vq5cuaJut7vlNT54hA3jKysrWl5eVlEU6na76vV6SpJEvV6vajTP83xil6yw4uFDTJqmVeWDnawAAACAw9eK4OGXWnU6HV29elVJMnlaYSUirE6MRiMNBgM556rlVZ1Op6qIFEUx0ePhd8kKl1hlWaY8zyeWXAEAAAA4XK0IHtL17XB9aKhrGhTot8Sd5thRFFVLroqiqKaS+4pHmqbbfjYAAACAg2lF8AgrEEVR7Do4MNyZyjlXLaFKkqTazSqOY8VxXB0r7OfIskwXL17UlStXlOd51SfihwkCAAAAOFytCB6Squnivjdjr/ySqjiOq6Va9W10/WDBNE115coVPfPMM9XnhhUVAAAAAIerNcFDUuPsjrrtdp/y/RqSNBgM1O12FcexpOsBxAcPv8TKV0H8cQEAAADMRmuCRxzHiqJoYnq5F4YCHxzCx3yjue/hWFlZ0cWLF7cEmXBq+dra2kTwAAAAADA7rQgeZlYtk+p0OluChzS5FCrP8y2BwVcxAAAAALRPK4KHJCVJom63q4WFBSVJMlGt8Dte+bBBAzgAAABwc2lF8IiiSHNzc1pcXNRdd92l+fn5ierHaDTS6uqq0jTVtWvXNBwOq6ZwAAAAAO3XiuBhZup0Opqbm9OpU6e0uLioJEnU7/cVRZHW1tYUx7HG47FGo1HjUiwAAAAA7dWK4OGcU5qmVWXDOackSZSmqeI41urqqpaXlzUejzUcDhnyBwAAANxkWhE8wl2mJKnX66nT6Wh+fr6qeFy5ckXj8Vjj8Xjfsz4AAAAAHI1WBA/nnLIs03A4rHo7ut2usiyrKh5LS0tK07TaDhcAAADAzaMVwcMry7Ka0eFnbPjmcv87czcAAACAm0+rgkdRFBoMBoqiqJrtYWbVxHEqHQAAAMDNqVXBwzmnoijYKhcAAAC4xbRmX9o4jqsKBwAAAIBbSyuCh5/jkSRJFT4IIAAAAMCt48DBw8xiM/uwmf27zd8fMLP3mdljZvbbZtad4hiKoojBgACwT4dxLQYA7B/X4d0dxjf975X0aPD7T0v6eefcCyVdk/TGaQ8U7ljF7lUAsCeHdi0GAOwL1+FdHCh4mNk5SV8n6Zc3fzdJr5L0O5svebOkb9jLMdkyFwD2ZhbXYgDA9LgOT+egFY9/IekHJPl9bs9IWnLO+dHiT0u694CfAQDYGddiADhaXIensO/gYWZ/V9JF59wH9/n+h83sA2b2AefcTdVQ7s/1ZjlfALeuw7wWZxof8tkBwK2P6/D0DjLH4xWS/p6ZvVZSX9JxSb8g6aSZJZsJ75ykZ5re7Jx7RNIjkhTHsYuiSD6AtJE/r3rgYOYIgCN2aNfi43aada4AsHdch6e074qHc+6HnXPnnHP3S/oWSf/ROfcPJf2xpG/cfNnrJb19muOFX+bbGj5CVDwAtMFhX4sBAHvDdXh6s9i/9gclfb+ZPaaN9W1v2subw8pCG/iAEUVRNeQwvAFASx3oWgwAODCuwzUHWWpVcc69R9J7Nu9/WtIX7+c4Yehow85WYS9HfbBhW4IRAHiHdS0GAOwP1+Gd8U/2O6gvpyJsAAAAAPtzKBWPw+Dnd7Tpy72vuvgKTFmWu7wDAAAAQJPWBQ/pemWhDcutpK2hqC3nBQAAANwsWrPUqq1f5sPzYqo6AAAAsD+tqHg455Rl2Zaqx1FXGAgZAAAAwOFoVfAId5HyS5vCn0d5fgAAAAD2rzVLraTrX/D5og8AAADcWlpR8ZCuh436zlGEEAAAAODm15rg4RE0AAAAgFtPq5ZaAQAAALg1ETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzBzBAwAAAMDMETwAAAAAzNyBgoeZnTSz3zGzj5vZo2b2pWZ22sz+yMw+ufnz1GGdLABgK67FAHC0uA5P56AVj1+Q9E7n3N+Q9DJJj0r6IUnvds69SNK7N38HAMwO12IAOFpch6ew7+BhZickvVLSmyTJOZc655YkvU7Smzdf9mZJ33DQkwQANONaDABHi+vw9A5S8XhA0iVJv2JmHzazXzazBUl3OufOb77mOUl3HvQkAQDb4loMAEeL6/CUDhI8EkmfL+kXnXOfJ2ldtRKSc85Jck1vNrOHzewDZvaBA5wDANzuDu1anGk885MFgFsQ1+EpHSR4PC3paefc+zZ//x1t/KVfMLO7JWnz58WmNzvnHnHOfaFz7gsPcA4AcLs7tGtxR70bcsIAcIvhOjylfQcP59xzkp4ysxdvPvRqSR+T9PuSXr/52Oslvf1AZwgA2BbXYgA4WlyHp5cc8P3fI+ktZtaV9GlJb9BGmHmrmb1R0pOSvvmAnwEA2BnXYgA4WlyHp3Cg4OGc+4ikpqVSrz7IcQEA0+NaDABHi+vwdJhcDgAAAGDmCB4AAAAAZo7gAQAAAGDmCB4AAAAAZo7gAQAAAGDmCB4AAAAAZo7gAQAAAGDmCB4AAAAAZo7gAQAAAGDmCB4AAAAAZo7gAQAAAGDmkqM+gRvJzPb1PufcIZ8JAAAAcHu5LYJHU+DYKYTUg4aZET4AAACAA2hN8IjjuPpyX/+5Hz5YRFHUeN/Mpg4fZVmqKAqVZbnj6wAAAAA0a0XwMDMlSSLnnMqylHPuQOHDhwozUxRFiuN44r40GUL8e8LPCs+hLEulaaqiKLacT1EUez4/AAAA4HbTiuAhbQSBsiwnwoBz7lCXOdWrHfXgEX6Wv+/PYbcKCQAAAIDttSJ4RFGkubk5FUWhPM9VlmW1vMl/+W9a5rSd7aolzjlFUVR9ZrgES2pefuUrJUmSVK8LqyF5nu/jTwwAAADcXloXPMbjcRU6JFUhZK+VD//asDejLMstwcMHi6b70vUqSafTqQJHGDxGo9Hh/CUAAAAAt7BWBA9JE1/868ubDrrEKVyytV0De1jNCM+p/jsAAACAvWtN8JA0ETwkVUusfNXiIL0eYaN4+LuZVRWVesXD/+5fx7a6AAAAwP60KnhIG1/w/S5UvicjrIAcNHw0vT+sqoTBI47jKpREUdRYFQEAAACwu9YED9/L4asc9W11Z61pB62wJ2SvDe4AAAAArmtF8CjLUuvr6xNhI5zpEQaRWajP75Cu93f4sFHvN6HfAwAAAJhea4LHYDCQ1LwV7o2qfNQ/M5wrstMMEAAAAAA7a0XwqG9RGz4e/jwKTUuwaDIHAAAA9qYVwUNSNbejyVF/ya9/flEUVDwAAACAPWhN8DjqcDGtNlRhAAAAgJtNdNQnAAAAAODWR/AAAAAAMHMEDwAAAAAzR/AAAAAAMHMEDwAAAAAzR/AAAAAAMHMEDwAAAAAzR/AAAAAAMHMEDwAAAAAz14rJ5XEc6+TJkxOP5Xmu0WiksixVlqWKojiiswMAAABwUK0IHv1+Xy9+8YtVlmX12Nrami5duqTRaKQsy6oQAgAAAODm04rgkSSJTp06tSVYrKysqCgKlWUpMzuiswMAAABwUK0IHlEUaWFhQZLknKse98utVldXlee5xuOxnHMTrwEAAADQfq0IHkmS6MyZM5JUBYvjx4/rzJkzKopCTz31lNbX16tejzzPj/iMAQAAAOxFK4KHmanX60m6Hjy63a663a4k6dq1a0qSRGZW3ah6AAAAADePVgQP55xGo9HEMqpwidXly5c1Ho9VFIWcc4qiSGamhYUFHT9+XHEcK4oiRVFUHc85p7Istb6+rsFgUO2OVZZl9RzN6gAAAMCN0YrgURSFVldXJ4LAtWvX9Oyzz2owGGhtbU3r6+vK81xRFClJEkVRpLNnz+qzP/uzNTc3pyRJqqpIuCTr6aef1vnz55VlWXUry7L6CQAAAGD2WhE8nHNK07S67ysgKysrGgwGGo1GVbVD2liaFUWRer2eFhcXNT8/r06nUy3N8sEjyzItLS2p0+lUy7P8Dln0iQAAAAA3TiuCx3g81uOPPz7xmK9yjMdjZVlWhQ7nXBVCVldX9eyzz1YBpL7sKooiLS4u6p577lFRFNWx8jzX0tJSVWXJsowBhQAAAMAMtSJ4jEYjPfrooxOP+aVSvifDBw//uyRdvXpVWZap0+no7NmzKstSnU5H/X5f/X5fknT69GmdOHGiqoBkWabxeKynn35azjnlea7BYEDwAAAAAGaoFcHDN4FPywePLMs0GAyUJIkWFxeVpqnMrKqImJmSJFG3262Wc2VZpiiK1O/31el0JInhhAAAAMCMtSJ47FdRFErTVEVRaHl5uerzOH78uMqyVBzH6nQ6EwEjjmN1u10tLCzo1KlTGo1GStNUw+HwiP80AAAAwK3rpg4eeZ6rKIqqcXw8HlfLrny1Y35+fmL+h9/56vjx4zIzDYdDra+va3l5mdkgAAAAwIxEB3mzmX2fmX3UzP7KzH7TzPpm9oCZvc/MHjOz3zaz7jTH8tvhxnG8p5tvIvf9Gr6HI03TKpiEfSE+gPhZICyzAnCzO8xrMQBg77gOT2ffFQ8zu1fSP5b0kHNuaGZvlfQtkl4r6eedc79lZr8k6Y2SfnGnY/X7fd1///2Nz9WrEGGTefhYnufVFrlpmurSpUtKkkRnzpxRt9udCClZlmllZUWXLl1SmqbV8EIAuNkc5rUYALB3XIend9ClVomkOTPLJM1LOi/pVZK+bfP5N0v6MU0RPF7ykpdI0sS2uWEYqG+n6+/7asbKyoqWlpaU57lGo5GWl5erfo6TJ09WE8+jKNJ4PNby8rIuXbqkPM/p7wBwszuUazEAYN+4Dk9h38HDOfeMmf2spM9IGkr695I+KGnJOeen8z0t6d6m95vZw5IelqT5+flq+9vg+BM//f0wkPjdq8qyVJqm6vV61XBAHzKCz5s4nt9e12/ZCwA3o8O8Fvc1P/sTBoBbDNfh6R1kqdUpSa+T9ICkJUlvk/Q1077fOfeIpEck6Y477nAnTpzwx93y2jBASNeXWfkQUpaljh8/rtOnT1eDAsfjcdVEfuzYMUVRVO2AFb7G94EAwM3oMK/Fx+00a04BYI+4Dk/vIEutXiPpcefcJUkys9+T9ApJJ80s2Ux45yQ9s9uB/ITxsOlbkuI4ntiRyvP3w+GCvrG8LMuqmuFnefjXlmVZBQ2/JIvQAeAmd2jXYgDAvnAdntJBdrX6jKSXm9m8bXy7f7Wkj0n6Y0nfuPma10t6+24H8oEj3K2qvsuV/z18rNPpKEmSan5Ht9tVv99Xr9erppd3Op1q2ZWvnLCTFYBbyKFdiwEA+8J1eEoH6fF4n5n9jqQPScolfVgbZaI/lPRbZvYTm4+9aZrj+eCRJElV9QgrHuH2t2G/Rtiz4bfOLcuyqnjkea40Tas+EL+7lQ8vkia22wWAm8lhX4sBAHvDdXh6B9rVyjn3o5J+tPbwpyV98V6O4wf71edz+GF/vlqx09yNcIcrv7VuWZZVr0ee51WQCYNNvWEdAG42h3UtBgDsD9fh6bRmcrkPF77iEYaNcJlUGEDCsOAnmIfBoukYPtj4pVlxHCtNU2VZJmnr3BAAAAAAB9eK4BFFkfr9/sRSq7Di4asTkrZdahVFUbXUKo7jaslVuKSq0+mo1+tJks6cOVPtbrW8vKzV1dWq+ZztdQEAAIDD1YrgYWZV9aFpqVW9x8Pzy6v8MaSNAOKHBfrfffBIkkTdbldmppMnT0qShsPhxA5XPrAAAAAAODytCR5h2AiXR9WDR2i3ZVH1LXjDxnK/E5ZzrtoBq761LiEEAAAAOBytCR5zc3NVKGjq7Qj7OnxACJdc+cby+g5V/phmpk6nU72/KArFcVz1dvT7fWVZptXVVQ2HQxVFoeFwqDRNJyorAAAAAPauFcEjiiL1er3GhnAfLsJBgJKqABH2eTQFhLBikiSJnHOK41jz8/OKokhZllU7XvkdsKIoqnbGyvOcna8AAACAA2pF8JDUuLwqrHKE4cJXPMJAEFY6woDgl1j5Cod/v9/ZysyqakccxxqNRtXMDz//w2/R6+/7wAMAAABgOq0IHlEUqdvtSprctareSO4DRn1eh78fBhH/Xr90q9PpVM3jzjl1u90qWCRJorm5OeV5rn6/r/X1dY3HY/X7fQ0Gg2r3K/956+vr1RItAAAAALtrRfCQVPVhNKlXNuo3X4Go93fUJ52HAwP90iu/NKvT6VRhotPpVL0dcRwrz3MlSaIsyzQejzUajQgeAAAAwB60Jnjs1EMRBo+mm7Q1ZHj1uR/hTz/7o9vtqizLalvfPM8lqdrpKs/zarp6+B5JWllZOfy/DAAAAOAW04rg4ZxTlmWNwaHew+F3pGoKKn4HrO12xgqPmef5xMDBTqdTBQ5f/YiiSHNzcyqKoqpy+P4P/9qPfOQjs/prAQAAAG4ZrQge0vXdqsKQEO5QVd8ut2nb3HBJlV+6FYaQkG849+HDzJRlmbIsq5ZY+Sb0oiiqMEJzOQAAALB3rQgevoogaUtI8Ltahdvo+sf96+tTzcPgEU4uD5dchY8lSVLtlOWb0M2sqmr43/17GCwIAAAA7E0rgkdRFFpZWalCxE5zPLx6T0f9fWHwaNopy1c6fODwlQ0/aNBXOdI0VVEUE8urCB0AAADA3rQieDjnNB6Pq52m6v0Z/r60dbvd7fo6fPCovzfkn/fLturTzcuyrJrJ/U+WWAEAAAB714rg4b/wN1UowtdImmgWry+jCu+Hy6p8haJ+3DDchDtWSap2s5I00QMCAAAAYO9aEzz89rSSJgYA+uf9LY5jJUlS9WaElQ3/nrAHI5x0Xp+KHkVRNUzQvydcahXHcTVkcDweT+ymReUDAAAAmF5rgkeSJFVICKsb4Wvqy6jCEFLXNOujPlzQ/wwDSZIk1eN+m90wlEj0eAAAAAB71YrgkSSJzpw5UzV7h9UKX/0IQ4fv5/D36/I8b6x4+JkdTcMG643qzrkqDPlA4nfYCpdvAQAAANhdK4JHt9vVC17wgmr3KB8+fICof8mvb5XrA4G0ETRGo1H1Pj8sULoeKLZrOg97RiRVwcMfOwwwAAAAAKbXiuARRZHm5+cnBvYVRVFNCg8HBjbN65Aml1b5MCJdHzzo39vUmxE2oodLsHw48btbhTNE6PEAAAAApteK4BHHsY4fP648z9Xr9ZTneVX98JWLPM+3LHOq93b4533FJHx9PVSEvSTh+8MqS1g1CSskhA4AAABgb1oRPJIk0enTp1UURbV7VJ7n1f0sy6pAkOd5db/eQF4PG/7ml0hJ2hIiPB9mfOjxASZ8b/ie+vsBAAAAbK8VwcNvp+urGr4aEVYlwqVSPgzUezvq4aNpV6vwfr1Xo17l2K6y0dTQDgAAAGB7rQge0vUg4KsMYQAIH8+yrFqC5R+rL5HyrwlDSl24Pa4PGP7zmtQrHE1b+AIAAABo1orgEVYqwuVRYbjwS6CyLJtYjpVlWRUwwvARVk+2+7zw9/Dx8Ln6zldNU9UBAAAA7KwVwUPSRNBoavAOA0n9Vq9+hM3l+1HftSoMHQAAAAD2rhXBI89zXblyRVmWaTQabdlO11c5yrLUeDzWcDiswoaveOw0pdxXLcLhgVEUbVk+5bfi9RWPer9I+DoAAAAA02tF8MiyTBcuXFCe5xqNRhPLpHzA8H0daZpW4cQ/V98qV5ocMhhF0bb3/XvCqeSSJpZ+Ne2YRfgAAAAApteK4OGcU5qmyvO8+hl+wfdb6Ia9HvXXhL0X4ZIo/3j9Fr4ufNyHi/rgQIIGAAAAsH+tCB5FUWhpaamqbGy3q5WvgoTBwG9t6ysZ9WpGHMcTVY6m14fCkOGDiN8BKww59a14AQAAAGyvNcFjZWVly7TycEmT/6If9mX45VT+cf9cfUlVGEbqwSNU7xHxwcOHHP/6pqnnAAAAALbXiuAhbW3kDvspmvoxpMnwUA8e4fKp+u+7aRo4GGJLXQAAAGBvWhE8zEy9Xq+auVEPIfVQUd+dyh9jt8/YaWlVuJNVeL9JU7UEAAAAwPZaEzw6nU4VIvI8n3g+juOqVyOOYyVJsmX3qrAy4ftApK3TyOvVjPrcj/oAQS8MPgAAAAD2phXBQ1K1e1QURUqSZMscjjB4NFU8JG0JH/69221/Ww8h9b4SL6xu+KVfVDwAAACA6bUieJiZkiSpllSFFYd6Y7gPJvXtccN+jKIoqkCSZVkVEuqzOMLtev1n+upH+Pn1bXclhggCAAAAe9Ga4OFDRVjBCBvHw4GASZJUz/vXN4WFpmF/9SVV9fth8KgHjvCzWHIFAAAATK8VwWOvwq1tw8BR7+WoVyXq2+WGTeX11+9U5WCZFQAAALA3rQgevtIgNe8kFYaCcEbHdrtU1QcOblflaPrMcPtd/3vT+TBAEAAAAJheK4KHpInKQ9Nz4QDBcAvdpiVPYcAIl1vVt82tV0D8Meuhox5wtpvvAQAAAKBZa4KHtHUpVJ2Zbemv8JPI/fPS1lkc4da54efUp5Q3fZ7/2VRZAQAAADCdVgSPsCrhl0g19V/UezDCike4/Co8bv3YfnlV0zHD44Sfsd25AgAAAJhOK4KHdP0LfdMOU/Uv+/V+D+n6lrz+vn88DBjh+8NKyHa7V/kQUu/poMcDAAAA2JvWBI+makVY8WgKHmFwiKJIeZ43zgJpmlxeP044/dz/zra5AAAAwOFoTfCoa1oiVV+CFe5sFU4093M//Gu8naoUPnSEYWO7bXNpLgcAAAD2phXBoz4rI7z5pVdNwUPSliVVfslVOHxwp7kbTbM7wh2u6mGFwAEAAADsXSuCh3S9LyPsqwhDRX351H74Y9T7Ouq9H1EUbRkW2BSGAAAAAEynNcHDh4xOpzMRDPyU8rDvIgwIuwmbxf17/DF9wGhqPA/f7x/3P1lqBQAAAOzNrt/czezfmNlFM/ur4LHTZvZHZvbJzZ+nNh83M/uXZvaYmf1/Zvb5055IWPHwPRrh7+FE8e0GB2533PqtaTJ5vZoRLvEKb/XnAeBGuFHXYgBAM67DBzfNt/dflfQ1tcd+SNK7nXMvkvTuzd8l6WslvWjz9rCkX5z2RLbbuar+mp3e31SNCB9rCiHhZ+d5rvX1dV27dk1Xr17VxYsX9dxzz03cLly4oMuXL+vKlSu6cuXKtH88ADioX9UNuBYDALb1q+I6fCC7LrVyzv2Jmd1fe/h1kr5q8/6bJb1H0g9uPv5rbuOb/5+b2Ukzu9s5d363zwm3zp3inLZtMA+fD/s3PB84iqKYmNGRZZmyLNPFixe1vLysPM+1tramNE0nPitJEnW73WpmCADcCDfqWgwAaMZ1+OD2++35zuAv7jlJd27ev1fSU8Hrnt58bMtfspk9rI0EqLNnz0rafx9Fvd9ju/eFFQ7f3+HDh3NOeZ5rOBxqZWVFWZZpZWVFg8Fg4hhxHKvf76vb7U51bgAwQ4d6Le5rfnZnCgC3Jq7De3Dgf7Z3zjkz23OntXPuEUmPSNILX/hCl+f5xHIr318RTjL3/NyOzeOEx6x+NvVfhMFjNBppPB4ryzJdvXpVKysrGo1GunjxopaWlqqKx2g0mjhGHMdUPAC0zmFci4/baXbNAIB94jq8u/1+e77gy0Vmdreki5uPPyPpvuB15zYf25FzrlrSlOe5JE0EjrD64UNHUy+Iv+9nfvjH6gMH8zzX6uqqVldXNRgM9Nhjj+mpp55SlmVaXl7WcDhUURQajUbKsmziXKMoUqfTYaI5gDY41GsxAGDPuA7vwX6/Pf++pNdv3n+9pLcHj3/7Zif/yyUtT7OWrb6bVNMuUqGmBvHwWPXKSdMtTVONx2MNh0MtLS3p8uXLunz5spaWlrS8vKzl5WWtrq5qfX194ra2tqbV1VWtrKxoZWVln399AHAoDvVa3CpmUhRP3nYYBgsAR+TWvQ7PwK4VDzP7TW00zTzPzJ6W9KOSfkrSW83sjZKelPTNmy9/h6TXSnpM0kDSG6Y9sdqXLQAADAxJREFUkTzPVRSFsixrDBpxHG8JHGEoqVdI6lUO/xrnnMbjsZ555hk9++yzGg6HunjxotbW1pTnebX8aqceE9+4DgA3yo26FrdBfOqUhl/yQq28IJELLrX9a04nP3hBxWOPH93JAbht3U7X4VmZZlerb93mqVc3vNZJ+u69noSvQPgv/kVRVPM7JFU9FX6+R5IkVfDwy6r8rlQ+gPiekfCWZZnSNNVgMNCjjz6qj33sY0rTVMPhUKPRaEto2W5LX78jFgDcKDfiWtwad5/VE99g+v6veId60fXlrr/25Mu1mt6heYIHgCNwW12HZ6Q1HdL1ZVb+S78PH37wXxzH1XBB/zq/S5V/XRg26sur8jzXaDTS2tqalpaWlGVZVW3ZCyaXA8Ahi2JZHKs41tPJu1f08MnH1LNO9fQzd39C7zx25y2+5wsA3LpaEzyaljaFVYV6iPCVh/p9X+3wy6XqS7AkqdPp6MyZM3rBC16g8Xhc7WpVH2IIALgx4pMnNHjFg7r2YEeDO52+7tz7lSg+6tMCAByi1gSPnYQVDL/rVX2pVVEUyvO8GgaYpmn1XLh0yjmnOI519913a25uTuvr6/rkJz+p4XBYhZa9Vj8AAAd09oye/DrTj7/qrborWdZD3WuK7dhRnxUA4BC1JnjUG8e3260qXEoVBoumakhYwQirGFEUqd/va2FhQWZW9ZDkeU7vBgDcQNbpyjqJyuNz6j1vqG889qzmo66kraGjY4XKjhQtLEhFoTLNpJJ/KAKAm0UrgoeZqdfrVQ3kfteo8BZWNcLg4ZdUhcurfJN5OPsjvEVRpPn5+WoY4NmzZ6vtda9evarV1dUj/hsBgFtffPKE1r7yxbryUKLR2VJf+8CH1bHtl1d94fzj+tXXvFzr975M88853fEnl1R84rEbeMYAgINoRfDwFYiyLNXtdrcMDgwrGH4ZlV9SNR6PJ2Z2NB07iqIqdPjhg3Eca35+XvPz81pfX1ccx1pbW9N4PCZ4AMANYCdP6OnXmH7m7/y67k2u6bM6I3VsYdvXv7K/qrd/2S/q0pcs6J8/8VqtXbxHc5+4gScMADiQVgSPcE6HpKrqUQ8UYQjx/Ri+ryN8nQ8au32etDE/pNPpqNPpqNvtMpEcAGYg6vdl/Z5k16+xxalFRWfGetXcczoVz0vaPnRI0nzU1Uu7klTq3558Tu/vnZvpOQMADldrgken09nSk+GrHL7C4Z/3DeBpmmo0Gm0JHkmSTAQZv1TLVzskTQwerPeDAAAOTzQ/r8GrP0cXvihW0b3+eH680Nc/+GH1rBX/KwIAzFgrrva+wVu6Ph/DVzJ8QPBVDv+cHzY4Go227EJVn+3hKyDhUiwfNPxxw615AQCHxxYWdP7LYv3Ef/4berBzsXq8Y6XujEvNRztXOgAAt4ZWBA9JW5ZG+epEfYer+myOMJx44XNRFE3siBVWOsKBhU3HAQAcgshUzDl9bu9ZPdghZADA7ao1wcNXGvzPMAw0bZdbX5ZV3zLX74zld7uqL7vygWM8HmttbU3r6+sajUbVnBAAAAAAh6e1wcPfb5rTUa941CsfvpLht871S67CJvUsy6odstbW1jQajRqXbQEAAAA4uFYEj7Basd1AwPA19Zkc/n1Nx6xXRvwx0zSduGVZVvWVAAAAADhcrQkefvhfOHncDwL0ocAvg0qSpOrX8DdfwagPEPRLqvzuWFmWqSgKLS8va21tTXmeTyyzGo/HR/y3AQAAANx6WhE8pOu7WIW7TIVTycN5HX6r3LAiIqkKGOHxRqNRtR3vaDTScDhUnue6ePGirl27NvF52w0hBAAAAHAwrQkeoXojeLikKoqiKnjEcawkSVSWpZIkUZIkyvO8qm7keV71bjjnqvu+4TyssoT9HwCAQ1QU6qyY3rH2Un28e7HxJQvR/9/e3fu2VcVhHH/OfXUcq05DqRU1hJcKgWBFrMAGlRBMCAbEyL/AxsTOAAtCQCcQE1RISIWKqoihAqSCEKIiQkJAISWkcYodJ/b1YYjP7bHbQEvi+Obm+5Gq2Dexz02GX/L0d142dF/c1HxUG7r+d7+ji91Af2SHlNlrhw9e+GteUZv/KAKA/aQwwcOFCdfJcOHDdTjctrj+9rdJkuTTqjqdjsIwVLfb1drampaXl7W5ualms6mrV68OHTyYZZk6nY663W4+xo0Wt/8b//4AANuzf7d07Oym3l45oX5y46/ZmLV65LFv9dr8WaUmzq+f35jWi+efV+WbqoxXbqeWrI5cXBLbgQDA/lGI4OE6Gn6nwz12U6lc8PCnV/V6vbzj4b+21+up2Wyq3W7rypUrWllZGZqGJe0sMIyeOQIA2F6/01F09oLmvtj+V465/x6du/u4smOfSV6J/b4zr0OfT6lx8oKsv+tg3yrrdcd41wCA3VaI4CFtdTxcgHABw1/HIemGnRD3uTAMFYah4jhWkiSampqSMUbtdltRtPVt+qef/5/7c4HIPZak9fX1nX7rAFB+/Ux2Y/v+RNDqqLt0SG+vHdd0cG2Tj48vP6h01aq/vi7RYQaAfa0QwSMIAlUqlaFrblrV6A5XWZblC8d7vd7QaeTWWsVxrEajIWOMNjY2FMdxvn1uq9VSu92+5W5HFEWqVqtK01RhGKpSqeRhZnFxcXd+CABwkC2v6K6PbtObPzw51PFIm33NXvhLGaEDAPa9QgQPY4ySZGvir5ty5UKHm1Llplr56zLcR39b3SzLVK/XFYahOp2OWq2WVldX892t/g8XjKrVqqIoUq1Wy+8XALBz2WpT8Sdf6+inwfWf67OSAwDKoBDBw+emMAVBkHcy3BQnt8PV6GP/hHI3BSuKIsVxrKmpKdXrdaVpmu9m5W/B6/iHE47eS6VS0czMjKrVqpIk0fT0tOI4FgBgF1krWUIGAJRV4YKHdP0f/y5UuOejYUNSHjaCIFCaprLWKkkSzc3NKU1TbW5u6tKlS6pWq0MdEml4Vyt/Ybt7v1qtpoWFBR0+fFhxHKtSqeTB4/Tp03v2cwEAAAD2q0IGD8d1PfywIQ2HA/d1/vkebl1HGIaamZlRHMf5qeXu5HJ33od/WrrfbQmCQFEUKQxD1et1zc3NqdFoKAxDpWmar/EAAAAA8N8K8dezW0A+uk2t60i48zdcQBg9sdwFiNFuiLTVtUiSRMYY1Wo1zc7ODp1W7sZx7+Vv6xvHscIwVK1WU6VSybsq7lwRAAAAADenMMHDLRqXNLSNrltc7oeF0RPH/WlSrlPh3jcIAiVJoizLlKapjh49OvQ6/597D3/bXLdFb61WU5qm+ftzlgcAAABw8woRPCTl3Qe/i+F2tur3+3nYcCeP+9OkfH748LsY1lqlaXrD145OtXKvccHDhRDXDfHP8QAAAADw35gv9C8IFwAAAMDuMLd6mN5YbsKYPyX9LOmIpOU9Hn6nY95prb19t24GACZlUItbog4DwESU/W/iQgQPxxjzlbX2obKPCQBFRR0GgMkray1mqhUAAACAsSN4AAAAABi7ogWPNw7ImABQVNRhAJi8UtbiQq3xAAAAAFBORet4AAAAACihQgQPY8zjxpiLxphFY8xLYxrjLWPMZWPMd961WWPMJ8aYHwcfD49jbADYD6jFADBZZa/DEw8exphQ0uuSnpD0gKTnjDEPjGGodyQ9PnLtJUlnrLX3SjozeA4ABw61GAAm6yDU4YkHD0kPS1q01v5krd2U9J6kp3Z7EGvtOUkrI5efknRy8PikpKd3e1wA2CeoxQAwWaWvw0UIHsck/eI9/3VwbS80rLW/Dx7/IamxR+MCQNFQiwFgskpfh4sQPArBbm3vxRZfADBB1GIAmKxx1uEiBI/fJN3hPZ8fXNsLS8aYOUkafLy8R+MCQNFQiwFgskpfh4sQPL6UdK8x5m5jTCLpWUmn9mjsU5JeGDx+QdKHezQuABQNtRgAJqv0dbgQBwgaY05IelVSKOkta+0rYxjjXUmPSjoiaUnSy5I+kPS+pAVJP0t6xlo7utgGAA4EajEATFbZ63AhggcAAACAcivCVCsAAAAAJUfwAAAAADB2BA8AAAAAY0fwAAAAADB2BA8AAAAAY0fwAAAAADB2BA8AAAAAY0fwAAAAADB2/wB2vtomiLQlCwAAAABJRU5ErkJggg==\n"},"metadata":{"needs_background":"light"}}],"source":["model.load_state_dict(torch.load(\n","    os.path.join(root_dir, \"best_metric_model.pth\")))\n","model.eval()\n","with torch.no_grad():\n","    for i, val_data in enumerate(val_loader):\n","        roi_size = (160, 160, 160)\n","        sw_batch_size = 4\n","        val_outputs = sliding_window_inference(\n","            val_data[\"image\"].to(device), roi_size, sw_batch_size, model\n","        )\n","        # plot the slice [:, :, 80]\n","        plt.figure(\"check\", (18, 6))\n","        plt.subplot(1, 3, 1)\n","        plt.title(f\"image {i}\")\n","        plt.imshow(val_data[\"image\"][0, 0, :, :, 60], cmap=\"gray\")\n","        plt.subplot(1, 3, 2)\n","        plt.title(f\"label {i}\")\n","        plt.imshow(val_data[\"label\"][0, 0, :, :, 60])\n","        plt.subplot(1, 3, 3)\n","        plt.title(f\"output {i}\")\n","        plt.imshow(torch.argmax(\n","            val_outputs, dim=1).detach().cpu()[0, :, :, 60])\n","        plt.show()\n","        if i == 2:\n","            break"]},{"cell_type":"markdown","metadata":{"id":"4_RdX-w8mUoF"},"source":["## Evaluation on original image spacings"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dWW1-oZhmUoF"},"outputs":[],"source":["val_org_transforms = Compose(\n","    [\n","        LoadImaged(keys=[\"image\", \"label\"]),\n","        EnsureChannelFirstd(keys=[\"image\", \"label\"]),\n","        ScaleIntensityRanged(\n","            keys=[\"image\"], a_min=0, a_max=4095,\n","            b_min=0.0, b_max=1.0,\n","        ),\n","        Orientationd(keys=[\"image\", \"label\"], axcodes=\"RAS\"),\n","        Spacingd(keys=[\"image\", \"label\"], pixdim=(\n","            2, 2, 2), mode=(\"bilinear\", \"nearest\")),\n","        CropForegroundd(keys=[\"image\", \"label\"], source_key=\"label\"),\n","        DivisiblePadd([\"image\", \"label\"], 16),\n","\n","    ]\n",")\n","\n","val_org_ds = Dataset(\n","    data=val_files, transform=val_org_transforms)\n","val_org_loader = DataLoader(val_org_ds, batch_size=1, num_workers=4)\n","\n","post_transforms = Compose([\n","    Invertd(\n","        keys=[\"pred\",\"label\"],\n","        transform=val_org_transforms,\n","        orig_keys=\"image\",\n","        meta_keys=[\"pred_meta_dict\", \"label_meta_dict\"],\n","        orig_meta_keys=\"image_meta_dict\",\n","        meta_key_postfix=\"meta_dict\",\n","        nearest_interp=False,\n","        to_tensor=True,\n","        device=\"cpu\",\n","    ),\n","    AsDiscreted(keys=\"pred\", argmax=True, to_onehot=2),\n","    AsDiscreted(keys=\"label\", to_onehot=2),\n","])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZJ39tOsGmUoG","outputId":"bb385e06-185f-4a37-a9ed-325ded4a9c52","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673906362709,"user_tz":0,"elapsed":31292,"user":{"displayName":"崔晋","userId":"00280143555364372270"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Metric on original image spacing:  0.33623823523521423\n"]}],"source":["model.load_state_dict(torch.load(\n","    os.path.join(root_dir, \"best_metric_model.pth\")))\n","model.eval()\n","\n","with torch.no_grad():\n","    for val_data in val_org_loader:\n","        val_inputs = val_data[\"image\"].to(device)\n","        roi_size = (160, 160, 160)\n","        sw_batch_size = 4\n","        val_data[\"pred\"] = sliding_window_inference(\n","            val_inputs, roi_size, sw_batch_size, model)\n","        val_data = [post_transforms(i) for i in decollate_batch(val_data)]\n","        val_outputs, val_labels = from_engine([\"pred\", \"label\"])(val_data)\n","        # compute metric for current iteration\n","        dice_metric(y_pred=val_outputs, y=val_labels)\n","\n","    # aggregate the final mean dice result\n","    metric_org = dice_metric.aggregate().item()\n","    # reset the status for next validation round\n","    dice_metric.reset()\n","\n","print(\"Metric on original image spacing: \", metric_org)"]},{"cell_type":"markdown","metadata":{"id":"yxoLatremUoG"},"source":["## Inference on Test Set"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tu6Dr25vmUoG"},"outputs":[],"source":["test_images = sorted(\n","    glob.glob(os.path.join(data_dir, \"imagesTs\", \"*.nii.gz\")))\n","\n","test_data = [{\"image\": image} for image in test_images]\n","\n","\n","test_org_transforms = Compose(\n","    [\n","        LoadImaged(keys=\"image\"),\n","        EnsureChannelFirstd(keys=\"image\"),\n","        Orientationd(keys=[\"image\"], axcodes=\"RAS\"),\n","        Spacingd(keys=[\"image\"], pixdim=(\n","            1.5, 1.5, 2.0), mode=\"bilinear\"),\n","        ScaleIntensityRanged(\n","            keys=[\"image\"], a_min=-57, a_max=164,\n","            b_min=0.0, b_max=1.0, clip=True,\n","        ),\n","        CropForegroundd(keys=[\"image\"], source_key=\"image\"),\n","    ]\n",")\n","\n","test_org_ds = Dataset(\n","    data=test_data, transform=test_org_transforms)\n","\n","test_org_loader = DataLoader(test_org_ds, batch_size=1, num_workers=4)\n","\n","post_transforms = Compose([\n","    Invertd(\n","        keys=\"pred\",\n","        transform=test_org_transforms,\n","        orig_keys=\"image\",\n","        meta_keys=\"pred_meta_dict\",\n","        orig_meta_keys=\"image_meta_dict\",\n","        meta_key_postfix=\"meta_dict\",\n","        nearest_interp=False,\n","        to_tensor=True,\n","    ),\n","    AsDiscreted(keys=\"pred\", argmax=True, to_onehot=2),\n","    SaveImaged(keys=\"pred\", meta_keys=\"pred_meta_dict\", output_dir=\"./out\", output_postfix=\"seg\", resample=False),\n","])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h--CTezamUoG"},"outputs":[],"source":["# # uncomment the following lines to visualize the predicted results\n","# from monai.transforms import LoadImage\n","# loader = LoadImage()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CL7N9nqamUoG"},"outputs":[],"source":["model.load_state_dict(torch.load(\n","    os.path.join(root_dir, \"best_metric_model.pth\")))\n","model.eval()\n","\n","with torch.no_grad():\n","    for test_data in test_org_loader:\n","        test_inputs = test_data[\"image\"].to(device)\n","        roi_size = (160, 160, 160)\n","        sw_batch_size = 4\n","        test_data[\"pred\"] = sliding_window_inference(\n","            test_inputs, roi_size, sw_batch_size, model)\n","\n","        test_data = [post_transforms(i) for i in decollate_batch(test_data)]\n","\n","#         # uncomment the following lines to visualize the predicted results\n","#         test_output = from_engine([\"pred\"])(test_data)\n","\n","#         original_image = loader(test_output[0].meta[\"filename_or_obj\"])\n","\n","#         plt.figure(\"check\", (18, 6))\n","#         plt.subplot(1, 2, 1)\n","#         plt.imshow(original_image[0][:, :, 20], cmap=\"gray\")\n","#         plt.subplot(1, 2, 2)\n","#         plt.imshow(test_output[0].detach().cpu()[1, :, :, 20])\n","#         plt.show()"]},{"cell_type":"markdown","metadata":{"id":"h6bCOzCemUoG"},"source":["## Cleanup data directory\n","\n","Remove directory if a temporary was used."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6CnSp2femUoG"},"outputs":[],"source":["if directory is None:\n","    shutil.rmtree(root_dir)"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"},"colab":{"provenance":[{"file_id":"16n-80N_Ygk2DffvU4M6pqHyVVl0wkGjW","timestamp":1673988851050},{"file_id":"https://github.com/Project-MONAI/tutorials/blob/main/3d_segmentation/spleen_segmentation_3d.ipynb","timestamp":1673890877976}],"machine_shape":"hm"},"accelerator":"GPU","gpuClass":"premium"},"nbformat":4,"nbformat_minor":0}